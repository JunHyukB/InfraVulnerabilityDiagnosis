#!/bin/sh

LANG=C
export LANG

HOSTNAME=`hostname`
OS=`uname`
DATE=`date +%Y-%m-%d`

# 전역 변수 선언 ##########################################################################
PASSWD="/etc/passwd"						#### 패스워드 파일 위치
GROUP="/etc/group"						#### 그룹 파일 위치
PROFILE="/etc/profile"						#### profile 파일 위치
HOSTS="/etc/hosts"						#### hosts 파일 위치
HOSTS_EQUIV="/etc/hosts.equiv"					#### hosts.equiv 파일 위치
ISSUE="/etc/issue"						#### issue 파일 위치
INETD_CONF="/etc/inetd.conf"					#### inetd.conf 파일 위치
SERVICES="/etc/services"					#### services 파일 위치
SYSLOG_CONF="/etc/syslog.conf"					#### SYSLOG 설정 파일
ATJOBS="/var/spool/cron/atjobs"
LPD="/etc/hosts.lpd"
HOST_ALLOW="/etc/hosts.allow"
HOST_DENY="/etc/hosts.deny"
SMTP_BANNER="/etc/mail/sendmail.cf"
DNS_BANNER="/etc/named.conf"

if [ $OS == "AIX" ]; then
	FILENAME=AIX_${HOSTNAME}

	SHADOW="/etc/security/passwd"					#### 쉐도우 파일 위치
	PASSWD_CONF="/etc/security/user"				#### 패스워드 정책 설정 파일 위치
	LOGIN_CONF="/etc/security/login.cfg"				#### 로그인 설정 파일 위치
	CRON_ALLOW="/var/adm/cron/cron.allow"				#### cron.allow 파일 위치
	CRON_DENY="/var/adm/cron/cron.deny"				#### cron.deny 파일 위치
	AT_ALLOW="/var/adm/cron/at.allow"				#### at.allow 파일 위치
	AT_DENY="/var/adm/cron/at.deny"					#### at.deny 파일 위치
	TELNET_BANNER="/etc/security/login.cfg"				#### 텔넷 로그인 배너 설정 파일
	FTP_BANNER="/tmp/ftpd.msg"					#### FTP 로그인 배너 설정 파일
	SMTP_CONF="/etc/sendmail.cf"					#### 센드메일 설정 파일
	SNMP_CONF="/etc/snmpd.conf"					#### SNMP 설정 파일
	NFS_CONF="/etc/exports"						#### NFS 설정 파일 위치
	CRONTABS="/var/spool/cron/crontabs"				#### crontabs 디렉터리 위치
	SSH_CONF1="/etc/ssh/sshd_config"					#### SSH 설정 파일 1
	SSH_CONF2="/etc/sshd_config"					#### SSH 설정 파일 2

elif [ $OS = "HP-UX" ]; then
	FILENAME=HP_${HOSTNAME}

	SHADOW="/etc/shadow"
	AUTH="/tcb/files/auth"
	PASSWD_CONF="/etc/default/security"
	LOGIN_CONF="/etc/securetty"
	PASSWD_CONF_TR="/tcb/files/auth/system/default"
	CRON_ALLOW="/var/adm/cron/cron.allow"
	CRON_DENY="/var/adm/cron/cron.deny"
	AT_ALLOW="/var/adm/cron/at.allow"
	AT_DENY="/var/adm/cron/at.deny"
	TELNET_BANNER="/etc/default/telnetd"
	FTP_BANNER="/etc/ftpd/ftpaccess "
	SMTP_CONF="/etc/mail/sendmail.cf"
	SNMP_CONF="/etc/snmpd.conf"
	NFS_CONF="/etc/exports"
	CRONTABS="/var/spool/cron/crontabs"
	SSH_CONF1="/etc/ssh/sshd_config"					
	SSH_CONF2="/etc/sshd_config"					

elif [ $OS == "Linux" ]; then
	FILENAME=Linux_${HOSTNAME}

	SHADOW="/etc/shadow"
	PASSWD_CONF="/etc/login.defs"
	LOGIN_CONF="/etc/pam.d/login"
	XINETD_CONF="/etc/xinetd.conf"
	CRON_ALLOW="/etc/cron.allow"
	CRON_DENY="/etc/cron.deny"
	AT_ALLOW="/etc/at.allow"
	AT_DENY="/etc/at.deny"
	TELNET_BANNER="/etc/issue.net"
	FTP_BANNER="/etc/welcome.msg"
	SMTP_CONF="/etc/mail/sendmail.cf"
	SNMP_CONF="/etc/snmp/snmpd.conf"
	NFS_CONF="/etc/exports"
	CRONTABS="/etc/crontab"
	SSH_CONF1="/etc/ssh/sshd_config"					
	SSH_CONF2="/etc/sshd_config"	
	SECURETTY="/etc/securetty"

elif [ $OS == "SunOS" ]; then
	FILENAME=SOL_${HOSTNAME}

	SHADOW="/etc/shadow"						#### 쉐도우 파일 위치
	PROFILE="/etc/profile"						#### profile 파일 위치
	PASSWD_CONF="/etc/default/passwd"				#### 패스워드 정책 설정 파일 위치
	PASSWD_CONF_POL="/etc/security/policy.conf"		#### 패스워드 임게값 설정 파일 위치
	LOGIN_CONF="/etc/default/login"					#### 로그인 설정 파일 위치
	inet_INETD_CONF="/etc/inet/inetd.conf"				#### inetd.conf 파일 위치
	inet_HOSTS="/etc/inet/hosts"					#### hosts 파일 위치
	CRON_ALLOW="/usr/lib/cron/cron.allow"				#### cron.allow 파일 위치
	CRON_DENY="/usr/lib/cron/cron.deny"				#### cron.deny 파일 위치
	AT_ALLOW="/usr/lib/cron/at.allow"				#### at.allow 파일 위치
	AT_DENY="/usr/lib/cron/at.deny"					#### at.deny 파일 위치
	inet_SERVICES="/etc/inet/services"				#### services 파일 위치
	TELNET_BANNER="/etc/default/telnetd"				#### 텔넷 로그인 배너 설정 파일
	FTP_BANNER="/etc/default/ftpd"					#### FTP 로그인 배너 설정 파일
	SMTP_CONF="/etc/mail/sendmail.cf"				#### 센드메일 설정 파일
	SNMP_CONF="/etc/snmp/conf/snmpd.conf"				#### SNMP 설정 파일
	SNMP_CONF2="/etc/sma/snmp/snmpd.conf"				#### SNMP2 설정 파일
	NFS_CONF="/etc/dfs/dfstab"					#### NFS 설정 파일 위치
	CRONTABS="/var/spool/cron/crontabs"				#### crontabs 디렉터리 위치
	SSH_CONF1="/etc/ssh/sshd_config"					
	SSH_CONF2="/etc/sshd_config"	

fi

echo "*********************************************************************"				>> ./$FILENAME.log 2>&1
echo "******     System Checklist for Linux & Unix ver 22.11.09
*******"				>> ./$FILENAME.log 2>&1
echo "*********************************************************************"				>> ./$FILENAME.log 2>&1
echo " "												>> ./$FILENAME.log 2>&1
echo " "												>> ./$FILENAME.log 2>&1
echo " "
echo "System check start. Please wait..."
	date
echo " "

echo "### Start Time ###" 										>> ./$FILENAME.log 2>&1
	date 												>> ./$FILENAME.log 2>&1
echo " "												>> ./$FILENAME.log 2>&1

echo "### OS Info. ###" 										>> ./$FILENAME.log 2>&1
	uname -a 											>> ./$FILENAME.log 2>&1
	oslevel -r 											>> ./$FILENAME.log 2>&1
echo " "												>> ./$FILENAME.log 2>&1

echo "### NETWORK ###"											>> ./$FILENAME.log 2>&1
if [ $OS == "HP-UX" ]; then
	echo "[ netstat -rn ]"											>> ./$FILENAME.log 2>&1	
		netstat -rn											>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ lanscan ]"											>> ./$FILENAME.log 2>&1	
		ifconfig `lanscan -v | grep "lan" | awk -F' ' '{print $5}' | uniq`								>> ./$FILENAME.log 2>&1
	echo "[ lanscan -v]"
		lanscan -v >> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "####################### ifconfig lan0 ###############################" >> ./$FILENAME.log 2>&1
	ifconfig lan0 >> ./$FILENAME.log 2>&1
	echo " " >> ./$FILENAME.log 2>&1
	echo "####################### ifconfig lan1 ###############################" >> ./$FILENAME.log 2>&1
	ifconfig lan1 >> ./$FILENAME.log 2>&1
	echo " " >> ./$FILENAME.log 2>&1	
	echo "####################### ifconfig lan2 ###############################" >> ./$FILENAME.log 2>&1
	ifconfig lan2 >> ./$FILENAME.log 2>&1
	echo " " >> ./$FILENAME.log 2>&1	
	echo "####################### ifconfig lan3 ###############################" >> ./$FILENAME.log 2>&1
	ifconfig lan3 >> ./$FILENAME.log 2>&1
	echo " " >> ./$FILENAME.log 2>&1	
	echo "####################### ifconfig lan4 ###############################" >> ./$FILENAME.log 2>&1
	ifconfig lan4 >> ./$FILENAME.log 2>&1
	echo " " >> ./$FILENAME.log 2>&1
	echo "####################### ifconfig lan5 ###############################" >> ./$FILENAME.log 2>&1
	ifconfig lan5 >> ./$FILENAME.log 2>&1
	echo " " >> ./$FILENAME.log 2>&1
else
	echo "[ ifconfig -a ]"											>> ./$FILENAME.log 2>&1	
		ifconfig -a											>> ./$FILENAME.log 2>&1
	echo " "												>> ./$FILENAME.log 2>&1
fi


echo "### V3 check ###"											>> ./$FILENAME.log 2>&1
echo "[ /package/v3net ]"											>> ./$FILENAME.log 2>&1
	ls -al /package/v3net											>> ./$FILENAME.log 2>&1
echo "[ /usr/local/v3net ]"											>> ./$FILENAME.log 2>&1
	ls -al /usr/local/v3net											>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

############################################
### Apache Variables
############################################

echo "### Apache Conf ###"										>> ./$FILENAME.log 2>&1
if [ `ps -ef | grep httpd | grep -v grep | wc -l` -ge 1 ]; then
	APACHE_CHECK=ON
	TEST1=`ps -ef | grep httpd | head -2 | tail -1 | awk '{print $8}'`
	TEST2=`echo ${TEST1%/*}`
	
else
	APACHE_CHECK=OFF
fi
echo $APACHE_CHECK											>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
############################################


echo "U-01 Restrict remote access of root"
echo "##### U-01 Restrict remote access of root"									>> ./$FILENAME.log 2>&1
if [ $OS == "AIX" ]; then
	echo "[ Case 1 : SSH : service enable check]"								>> ./$FILENAME.log 2>&1
		ps -ef | grep ssh	| grep -v grep || echo "[no service]"					>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Case 1 : SSH : port enable check]"								>> ./$FILENAME.log 2>&1
		netstat -an | grep *.22 | grep LISTEN || echo "[no port]"					>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	### [U-01] /etc/ssh/sshd_config, /etc/sshd_config 각 os별로 2가지 경로 파일구하도록 수정_210625
	echo "[ Case 1_1 : SSH : PermitRootLogin config] (/etc/ssh/sshd_config)"								>> ./$FILENAME.log 2>&1
		(cat $SSH_CONF1 | grep -i PermitRootLogin || echo "[no config]")					>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Case 1_2 : SSH : PermitRootLogin config] (/etc/sshd_config)"								>> ./$FILENAME.log 2>&1
		(cat $SSH_CONF2 | grep -i PermitRootLogin || echo "[no config]")					>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Case 2 : Telnet : service enable check]"							>> ./$FILENAME.log 2>&1
		ps -ef | grep telnet	| grep -v grep || echo "no service"					>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Case 2 : Telnet : service enable check(inetd.conf)]"						>> ./$FILENAME.log 2>&1
		(cat $INETD_CONF | grep telnet)									>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Case 2 : Telnet : port enable check]"								>> ./$FILENAME.log 2>&1
		netstat -an | grep *.23 | grep LISTEN || echo "[no port]"					>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Case 2 : Telnet : rlogin]"									>> ./$FILENAME.log 2>&1
	echo " - default"											>> ./$FILENAME.log 2>&1
		sed -n '/default:/,/:/p' $PASSWD_CONF | grep -v '*' | grep rlogin || echo "[no config]"		>> ./$FILENAME.log 2>&1
	echo " - root"												>> ./$FILENAME.log 2>&1
		sed -n '/root:/,/:/p' $PASSWD_CONF | grep -v '*' | grep rlogin || echo "[no config]"		>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
elif [ $OS = "HP-UX" ]; then
	echo "[ Case 1 : SSH : service enable check]"								>> ./$FILENAME.log 2>&1
		ps -ef | grep ssh	| grep -v grep								>> ./$FILENAME.log 2>&1	
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Case 1 : SSH : port enable check]"								>> ./$FILENAME.log 2>&1
		netstat -an | grep *.22 | grep LISTEN 								>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Case 1_1 : SSH : PermitRootLogin config] (/etc/ssh/sshd_config)"								>> ./$FILENAME.log 2>&1
		(cat $SSH_CONF1 | grep -i PermitRootLogin || echo "[no config]")					>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Case 1_2 : SSH : PermitRootLogin config] (/etc/sshd_config)"								>> ./$FILENAME.log 2>&1
		(cat $SSH_CONF2 | grep -i PermitRootLogin || echo "[no config]")					>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Case 2 : Telnet : service enable check]"							>> ./$FILENAME.log 2>&1
		ps -ef | grep telnet	| grep -v grep								>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Case 2 : Telnet : service enable check(inetd.conf)]"						>> ./$FILENAME.log 2>&1
		(cat $INETD_CONF | grep telnet)									>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Case 2 : Telnet : port enable check]"								>> ./$FILENAME.log 2>&1
		netstat -an | grep *.23 | grep LISTEN 								>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Case 2 : Telnet : consol]"									>> ./$FILENAME.log 2>&1
		(cat $LOGIN_CONF | grep -i console || echo "[no config]")					>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
elif [ $OS == "Linux" ]; then
	echo "[ Case 1 : SSH : service enable check]"								>> ./$FILENAME.log 2>&1
		ps -ef | grep ssh	| grep -v grep								>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Case 1 : SSH : port enable check]"								>> ./$FILENAME.log 2>&1
		netstat -an | grep :22 | grep LISTEN 								>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Case 1_1 : SSH : PermitRootLogin config] (/etc/ssh/sshd_config)"								>> ./$FILENAME.log 2>&1
		(cat $SSH_CONF1 | grep -i PermitRootLogin || echo "[no config]")					>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Case 1_2 : SSH : PermitRootLogin config] (/etc/sshd_config)"								>> ./$FILENAME.log 2>&1
		(cat $SSH_CONF2 | grep -i PermitRootLogin || echo "[no config]")					>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Case 2 : Telnet : service enable check]"							>> ./$FILENAME.log 2>&1
		ps -ef | grep telnet	| grep -v grep								>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Case 2 : Telnet : service enable check(/etc/xinetd.d/telnet)]"					>> ./$FILENAME.log 2>&1
		(cat /etc/xinetd.d/telnet)									>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Case 2 : Telnet : port enable check]"								>> ./$FILENAME.log 2>&1
		netstat -an | grep :23 | grep LISTEN 								>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Case 2 : Telnet : pam_securetty.so]"								>> ./$FILENAME.log 2>&1
		(cat $LOGIN_CONF | grep -i pam_securetty.so || echo "[no config]")				>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Case 2 : Telnet : /etc/security]"								>> ./$FILENAME.log 2>&1
		(cat $SECURETTY)										>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
elif [ $OS == "SunOS" ]; then
	echo "[ Case 1 : SSH : service enable check]"								>> ./$FILENAME.log 2>&1
		svcs -p "*ssh*"											>> ./$FILENAME.log 2>&1
		ps -ef | grep ssh	| grep -v grep								>> ./$FILENAME.log 2>&1
	echo "+++++"												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Case 1 : SSH : port enable check]"								>> ./$FILENAME.log 2>&1
		netstat -an | grep *.22 | grep LISTEN || echo "[no port]"					>> ./$FILENAME.log 2>&1
	echo "+++++"												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Case 1_1 : SSH : PermitRootLogin config] (/etc/ssh/sshd_config)"								>> ./$FILENAME.log 2>&1
		(cat $SSH_CONF1 | grep -i PermitRootLogin || echo "[no config]")					>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Case 1_2 : SSH : PermitRootLogin config] (/etc/sshd_config)"								>> ./$FILENAME.log 2>&1
		(cat $SSH_CONF2 | grep -i PermitRootLogin || echo "[no config]")					>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Case 2 : Telnet : service enable check]"							>> ./$FILENAME.log 2>&1
		svcs -p "*telnet*"										>> ./$FILENAME.log 2>&1
		ps -ef | grep telnet	| grep -v grep								>> ./$FILENAME.log 2>&1
	echo "+++++"												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Case 2 : Telnet : port enable check]"								>> ./$FILENAME.log 2>&1
		netstat -an | grep *.23 | grep LISTEN || echo "[no port]"					>> ./$FILENAME.log 2>&1
	echo "+++++"												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Case 2 : Telnet : console]"									>> ./$FILENAME.log 2>&1
		(cat $LOGIN_CONF | grep -i CONSOLE || echo "[no config]")					>> ./$FILENAME.log 2>&1
	echo "+++++"												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
fi
echo "##### U-01 finish"											>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-02 Password complexity"
echo "##### U-02 Password complexity"							>> ./$FILENAME.log 2>&1
if [ $OS == "AIX" ]; then
	egrep -i ":$|minalpha|minother|maxrepeats|mindiff|minlen" $PASSWD_CONF					>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
elif [ $OS = "HP-UX" ]; then
	echo "[Standard Mode & Trusted Mode] " 								>> ./$FILENAME.log 2>&1
		(cat $PASSWD_CONF | egrep -i 'PASSWORD_MIN_UPPER_CASE_CHARS|PASSWORD_MIN_LOWER_CASE_CHARS|PASSWORD_MIN_DIGIT_CHARS|PASSWORD_MIN_SPECIAL_CHARS|MIN_PASSWORD_LENGTH' || echo "[no config]")		>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " "											>> ./$FILENAME.log 2>&1
elif [ $OS == "Linux" ]; then
	echo " [Fedora & Gentoo & Red Hat ] " 										>> ./$FILENAME.log 2>&1
	echo " [ Case 1 : /etc/pam.d/system-auth (RHEL5) ] " 										>> ./$FILENAME.log 2>&1
		(cat /etc/pam.d/system-auth | egrep -i 'pam_cracklib.so' || echo "[pam_cracklib.so no setting]") 	>> ./$FILENAME.log 2>&1
	echo "+++++"												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo " [ Case 2 : /etc/security/pwquality.conf (RHEL7) ] " 										>> ./$FILENAME.log 2>&1
		(cat /etc/security/pwquality.conf | egrep -i 'pam_cracklib.so' || echo "[pam_cracklib.so no setting]") 	>> ./$FILENAME.log 2>&1
	echo "+++++" 													>> ./$FILENAME.log 2>&1
	echo " " 													>> ./$FILENAME.log 2>&1
	echo " [Ubuntu & Suse & Debian ] " 										>> ./$FILENAME.log 2>&1
		(cat /etc/pam.d/common-password | egrep -i 'pam_cracklib.so' || echo "[pam_cracklib.so no setting]") 	>> ./$FILENAME.log 2>&1
	echo "+++++" 													>> ./$FILENAME.log 2>&1
	echo " " 													>> ./$FILENAME.log 2>&1
elif [ $OS == "SunOS" ]; then
	(cat $PASSWD_CONF | egrep -i 'MINALPHA=|MINNONALPHA=|MAXREPEATS=')				>> ./$FILENAME.log 2>&1
	echo "+++++"											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
fi
echo "##### U-02 finish"											>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-03 Threshold"
echo "##### U-03 Threshold"								>> ./$FILENAME.log 2>&1
if [ $OS == "AIX" ]; then
	egrep -i ":$|loginretries" $PASSWD_CONF									>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
elif [ $OS = "HP-UX" ]; then
	echo "[Standard Mode] " 										>> ./$FILENAME.log 2>&1
		(cat $PASSWD_CONF | egrep -i 'AUTH_MAXTRIES'	|| echo "[no config]")				>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[Trusted Mode] " 											>> ./$FILENAME.log 2>&1
		(cat $PASSWD_CONF_TR | egrep -i 'u_maxtries'	|| echo "[no config]")				>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
elif [ $OS == "Linux" ]; then
	echo " [Fedora & Gentoo & Red Hat ] " 									>> ./$FILENAME.log 2>&1
		(cat /etc/pam.d/system-auth | egrep -i 'no_magic_root' || echo "no_magic_root no setting")	>> ./$FILENAME.log 2>&1
		(cat /etc/pam.d/system-auth | egrep -i 'pam_tally.so' || echo "pam_tally.so no setting")	>> ./$FILENAME.log 2>&1
		(cat /etc/pam.d/system-auth | egrep -i 'pam_tally2.so' || echo "no setting pam_tally2.so") 	>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo " [Ubuntu & Suse & Debian] " 									>> ./$FILENAME.log 2>&1
		(cat /etc/pam.d/common-auth | egrep -i 'no_magic_root' || echo "no_magic_root no setting")	>> ./$FILENAME.log 2>&1
		(cat /etc/pam.d/common-auth | egrep -i 'pam_tally.so' || echo "pam_tally.so no setting")	>> ./$FILENAME.log 2>&1
		(cat /etc/pam.d/common-auth | egrep -i 'pam_tally2.so' || echo "no setting pam_tally2.so")	>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
elif [ $OS == "SunOS" ]; then
	(cat $LOGIN_CONF | egrep -i 'RETRIES=|DISABLETIME=')							>> ./$FILENAME.log 2>&1
	echo " "														>> ./$FILENAME.log 2>&1
	echo "[SOLARIS 5.9 above version case check(/etc/security/policy.conf)]"							>> ./$FILENAME.log 2>&1
	(cat $PASSWD_CONF_POL | egrep -i 'LOCK_AFTER_RETRIES')			>> ./$FILENAME.log 2>&1
	echo "+++++"												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
fi
echo "##### U-03 finish"											>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-04 Password portection"
echo "##### U-04 Password portection"						>> ./$FILENAME.log 2>&1
echo "[ $PASSWD ]"											>> ./$FILENAME.log 2>&1
	(cat $PASSWD)						 					>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ $SHADOW ]"											>> ./$FILENAME.log 2>&1
	(cat $SHADOW)						 					>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " "												>> ./$FILENAME.log 2>&1
if [ $OS = "HP-UX" ]; then
	echo "[Trusted mode(/tcb/files/auth)]"								>> ./$FILENAME.log 2>&1
	cp /etc/passwd tmp$$
	while read line
	do
	USER=$(echo $line|awk '{FS=":";print $1}')
	echo "making entry for $USER"									>> ./$FILENAME.log 2>&1
	FL=$(echo $USER|cut -c 1)
	ENC=$(grep "u_pwd" /tcb/files/auth/${FL}/${USER} |awk '{FS="=";print $2}' |awk '{FS=":";print $1}')
	echo $line |awk -v enc=$ENC -F":" '{$2=enc;OFS=":";print $0}'					>> ./$FILENAME.log 2>&1
	done < tmp$$
	rm tmp$$
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
fi
echo "##### U-04 finish"											>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-44 UID Check '0'"
echo "##### U-44 UID Check '0'"									>> ./$FILENAME.log 2>&1
echo "[ root UID '0' ]"											>> ./$FILENAME.log 2>&1
	awk -F: '$3==0 { print $1 " -> UID=" $3 }' $PASSWD | grep -v root				>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ $PASSWD ]"											>> ./$FILENAME.log 2>&1
	awk -F: '{print $1, $3}' $PASSWD 								>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "##### U-44 finish"											>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-45 su control"
echo "##### U-45 su control"								>> ./$FILENAME.log 2>&1
if [ $OS == "AIX" ]; then
	echo "[ Case 1 - /bin/su permission ]"								>> ./$FILENAME.log 2>&1
		ls -al /bin/su										>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	echo "[ Case 1 - /etc/security/user Sugroup  ]"								>> ./$FILENAME.log 2>&1
		(cat /etc/security/user | grep Sugroup)								>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 										>> ./$FILENAME.log 2>&1
	echo "[ Case 2 : /etc/group wheel grou ]"				 		>> ./$FILENAME.log 2>&1
		(cat /etc/group | grep wheel)								>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1	
elif [ $OS == "HP-UX" ]; then
	echo "[ Case 1 - /bin/su permission  ]"								>> ./$FILENAME.log 2>&1
		ls -al /bin/su										>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	echo "[ Case 1 - /etc/default/security SU_ROOT_GROUP ]"								>> ./$FILENAME.log 2>&1
		(cat /etc/default/security | grep SU_ROOT_GROUP)								>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 										>> ./$FILENAME.log 2>&1
	echo "[ Case 2 : /etc/group wheel group ]"				 		>> ./$FILENAME.log 2>&1
		(cat /etc/group | grep wheel)								>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
elif [ $OS == "Linux" ]; then
	echo "[ Case 1 - /bin/su permission ]"								>> ./$FILENAME.log 2>&1
		ls -al /bin/su										>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	echo "[ Case 1 - /bin/su group ]"								>> ./$FILENAME.log 2>&1
		DIRS=`ls -al /etc/pam.d/su| awk '{print $4}'`
		 for dir in $DIRS
		  do
		    (cat /etc/group | grep $dir:)							>> ./$FILENAME.log 2>&1
		    echo "+++++" 									>> ./$FILENAME.log 2>&1
		    echo " " 										>> ./$FILENAME.log 2>&1
		 done
	echo "[ Case 2 : Using Pam Module - /etc/pam.d/su permission ]"					>> ./$FILENAME.log 2>&1
		ls -al /etc/pam.d/su									>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	echo "[ Case 2 : Using Pam Module - wheel group ]"				 		>> ./$FILENAME.log 2>&1
		(cat /etc/group | grep wheel)								>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	echo "[  Case 2 : Using Pam Module - /etc/pam.d/su config ]"					>> ./$FILENAME.log 2>&1
		(cat /etc/pam.d/su | grep pam_*)							>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " "
else
	echo "[ /usr/bin/su properties ]"								>> ./$FILENAME.log 2>&1
	ls -al /usr/bin/su										>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	echo "[ Check su group ]"				 					>> ./$FILENAME.log 2>&1
	DIRS=`ls -al /usr/bin/su| awk '{print $4}'`
         for dir in $DIRS
          do
	    (cat $GROUP | grep $dir:)									>> ./$FILENAME.log 2>&1
         done
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " "											>> ./$FILENAME.log 2>&1
fi
echo "##### U-45 finish"								>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-46 Password policy : MIN LENGTH"
echo "##### U-46 Password policy : MIN LENGTH"						>> ./$FILENAME.log 2>&1
if [ $OS == "AIX" ]; then
	egrep -i ":$|minlen" $PASSWD_CONF								>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " "											>> ./$FILENAME.log 2>&1
elif [ $OS = "HP-UX" ]; then
	echo "[Standard Mode & Trusted Mode] " 								>> ./$FILENAME.log 2>&1
	egrep -i ":$|MIN_PASSWORD_LENGTH" $PASSWD_CONF							>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	(cat $PASSWD_CONF | grep -i MIN_PASSWORD_LENGTH || echo "[no config]")				>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
elif [ $OS == "Linux" ]; then
	(cat $PASSWD_CONF | grep -i PASSLENGTH)								>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	(cat $PASSWD_CONF | grep -i PASS_MIN_LEN)							>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
elif [ $OS == "SunOS" ]; then
	(cat $PASSWD_CONF | grep -i PASSLENGTH=	|| echo "[no config]")					>> ./$FILENAME.log 2>&1
echo "+++++"												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
fi
echo "##### U-46 finish"											>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-47 Password policy : MAX AGE"
echo "##### U-47 Password policy : MAX AGE"							>> ./$FILENAME.log 2>&1
if [ $OS == "AIX" ]; then
	egrep -i ":$|maxage" $PASSWD_CONF								>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " "											>> ./$FILENAME.log 2>&1
elif [ $OS = "HP-UX" ]; then
	echo "[Standard Mode] " 									>> ./$FILENAME.log 2>&1
	(cat $PASSWD_CONF | grep -i PASSWORD_MAXDAYS	|| echo "[no config]")				>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
echo "[Trusted Mode] " 											>> ./$FILENAME.log 2>&1
	(cat $PASSWD_CONF_TR | egrep -i 'u_exp' || echo "[no config]")					>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
elif [ $OS == "Linux" ]; then
	(cat $PASSWD_CONF | grep -i MAXWEEKS) 								>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	(cat $PASSWD_CONF | grep -i PASS_MAX_DAYS)  							>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
elif [ $OS == "SunOS" ]; then
	(cat $PASSWD_CONF | grep -i MAXWEEKS= || echo "[no config]")					>> ./$FILENAME.log 2>&1
	echo "+++++"											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
fi
echo "##### U-47 finish"									>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-48 Password policy : MIN AGE"
echo "##### U-48 Password policy : MIN AGE"							>> ./$FILENAME.log 2>&1
if [ $OS == "AIX" ]; then
	egrep -i ":$|minage" $PASSWD_CONF								>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " "											>> ./$FILENAME.log 2>&1
elif [ $OS = "HP-UX" ]; then
	(cat $PASSWD_CONF | grep -i PASSWORD_MINDAYS	|| echo "[no config]")				>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " "											>> ./$FILENAME.log 2>&1
elif [ $OS == "Linux" ]; then
	(cat $PASSWD_CONF | grep -i PASS_MIN_DAYS)							>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " "											>> ./$FILENAME.log 2>&1
elif [ $OS == "SunOS" ]; then
	(cat $PASSWD_CONF | grep -i MINWEEKS	|| echo "[no config]")					>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " "											>> ./$FILENAME.log 2>&1
fi
echo "##### U-48 finish"											>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-49 Unnecessary account"
echo "##### U-49 Unnecessary account"								>> ./$FILENAME.log 2>&1
echo "[ /etc/passwd ]"											>> ./$FILENAME.log 2>&1
	(cat $PASSWD | grep -v 'nologin' | grep -v 'false') 				 		>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ /etc/shadow ]"											>> ./$FILENAME.log 2>&1
	(cat $SHADOW)						 					>> ./$FILENAME.log 2>&1

#echo "[ lastlog ]"											>> ./$FILENAME.log 2>&1
#	lastlog												>> ./$FILENAME.log 2>&1
#
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
if [ $OS == "AIX" ]; then
	usrck -n ALL											>> ./usrck.log 2>&1
	grep "locked" usrck.log										>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	rm -rf usrck.log
fi
echo "##### U-49 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-50 Manager group"
echo "##### U-50 Manager group"											>> ./$FILENAME.log 2>&1
	(cat $GROUP | grep root)									>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "##### U-50 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-51 Null group"
echo "##### U-51 Null group"											>> ./$FILENAME.log 2>&1
	awk -F: '$4==null' $GROUP									>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "##### U-51 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-52 Same UID Check"
echo "##### U-52 Same UID Check"											>> ./$FILENAME.log 2>&1
	ret=`awk -F: '{ print $3}' $PASSWD | sort | uniq -d | wc -l`
	if [ $ret -eq 0 ]; then
		echo "no same UID"									>> ./$FILENAME.log 2>&1
		echo " " 										>> ./$FILENAME.log 2>&1
		echo "UID : USERNAME"									>> ./$FILENAME.log 2>&1
		awk -F: '{ print $3 ":" $1 }' $PASSWD | sort						>> ./$FILENAME.log 2>&1
	else
		echo "exist same UID"									>> ./$FILENAME.log 2>&1
		ret2=`awk -F: '{ print $3 }' $PASSWD | sort | uniq -d`

		for RPM in $ret2; do
			awk -F: '$3=='$RPM' { print $0 }' $PASSWD					>> ./$FILENAME.log 2>&1
		done
	fi
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "##### U-52 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-53 User Shell Check"
echo "##### U-53 User Shell Check"											>> ./$FILENAME.log 2>&1
	(cat $PASSWD | egrep "^daemon|^bin|^sys|^adm|^listen|^nobody|^nobody4|^noaccess|^diag|^listen|^operator|^games|^gopher" | grep -v "admin")	>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "##### U-53 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-54 Session timeout setting"
echo "##### U-54 Session timeout setting"											>> ./$FILENAME.log 2>&1
echo "[ Case 1 Check Point 1 : sh, ksh, bash TMOUT setting in /etc/profile ]"				>> ./$FILENAME.log 2>&1
	(cat $PROFILE | grep -i TMOUT || echo "[no config]")						>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ Case 2 : csh TMOUT setting in /etc/csh.login ]"							>> ./$FILENAME.log 2>&1
	(cat /etc/csh.login | grep -i autologout || echo "[no config]")					>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
if [ $OS == "SunOS" ]; then
	echo "[ Case 1 : Check Point 2 : $LOGIN_CONF ]"							>> ./$FILENAME.log 2>&1
	(cat $LOGIN_CONF | grep -i TIMEOUT || echo "[no config]")					>> ./$FILENAME.log 2>&1
	echo "+++++"											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
fi
echo "##### U-54 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-05 PATH check"
echo "##### U-05 PATH check"											>> ./$FILENAME.log 2>&1
	(echo $PATH)											>> ./$FILENAME.log 2>&1
	if [ `echo $PATH | grep "\.:" | wc -l` -eq 0 ]; then
		echo "PATH : OK"									>> ./$FILENAME.log 2>&1
		echo "+++++" 										>> ./$FILENAME.log 2>&1
		echo " " 										>> ./$FILENAME.log 2>&1
	else
		echo "'.' Exist"									>> ./$FILENAME.log 2>&1
		echo "+++++" 										>> ./$FILENAME.log 2>&1
		echo " " 										>> ./$FILENAME.log 2>&1
	fi
echo "##### U-05 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-07 /etc/passwd owner and permission check"
echo "##### U-07 /etc/passwd owner and permission check(root, 644)"											>> ./$FILENAME.log 2>&1
	ls -al $PASSWD											>> ./$FILENAME.log 2>&1
echo "+++++"												>> ./$FILENAME.log 2>&1
echo " "												>> ./$FILENAME.log 2>&1
echo "##### U-07 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-08 /etc/shadow owner and permission check"
echo "##### U-08 /etc/shadow owner and permission check(root, 400)"											>> ./$FILENAME.log 2>&1
if [ $OS = "HP-UX" ]; then
	echo " [ Standard Mode ] "									>> ./$FILENAME.log 2>&1
	ls -al $SHADOW											>> ./$FILENAME.log 2>&1
	echo "+++++"											>> ./$FILENAME.log 2>&1
	echo " "											>> ./$FILENAME.log 2>&1
	echo " [ Trasted Mode ] "									>> ./$FILENAME.log 2>&1
	ls -al $AUTH											>> ./$FILENAME.log 2>&1
	echo "+++++"											>> ./$FILENAME.log 2>&1
	echo " "											>> ./$FILENAME.log 2>&1

else
	ls -al $SHADOW											>> ./$FILENAME.log 2>&1
	echo "+++++"											>> ./$FILENAME.log 2>&1
	echo " "											>> ./$FILENAME.log 2>&1
fi
echo "##### U-08 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-09 /etc/hosts owner and permission check"
echo "##### U-09 /etc/hosts owner and permission check(root, 600)"											>> ./$FILENAME.log 2>&1
	ls -al $HOSTS $HOSTS_EQUIV 						 			>> ./$FILENAME.log 2>&1
echo "+++++"												>> ./$FILENAME.log 2>&1
echo " "												>> ./$FILENAME.log 2>&1
echo "##### U-09 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-10 /etc/(x)inetd.conf owner and permission check"
echo "##### U-10 /etc/(x)inetd.conf owner and permission check(root, 600)"											>> ./$FILENAME.log 2>&1
if [ $OS == "SunOS" ]; then
	ls -al $INETD_CONF 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	ls -al $inet_INETD_CONF										>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
else
	ls -al $INETD_CONF 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	ls -al $XINETD_CONF 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
fi
echo "##### U-10 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-11 /etc/syslog.conf owner and permission check"
echo "##### U-11 /etc/syslog.conf owner and permission check(root(or bin, sys), 640)"					>> ./$FILENAME.log 2>&1
	ls -al $SYSLOG_CONF 						 				>> ./$FILENAME.log 2>&1
echo "+++++"												>> ./$FILENAME.log 2>&1
echo " "												>> ./$FILENAME.log 2>&1
if [ $OS == "Linux" ]; then
	ls -al /etc/rsyslog.conf 							 		>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
fi
echo "##### U-11 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-12 /etc/services owner and permission check"
echo "##### U-12 /etc/services owner and permission check(root(or bin, sys), 644)"			>> ./$FILENAME.log 2>&1
if [ $OS == "SunOS" ]; then
	ls -al $SERVICES 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	ls -al $inet_SERVICES										>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
else
	ls -al $SERVICES 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
fi
echo "##### U-12 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-13 SUID, SGID, Sticky bit check"
echo "##### U-13 SUID, SGID, Sticky bit check"											>> ./$FILENAME.log 2>&1
if [ $OS == "AIX" ]; then
	echo "[CHECK SUID & SGID]"									>> ./$FILENAME.log 2>&1
		FILES="/usr/dt/bin/dtaction /usr/dt/bin/dtterm /usr/bin/X11/xlock /usr/sbin/mount /usr/sbin/lchangelv"
		for check_file in $FILES
		  do
		    if [ -f $check_file ];
		      then
			echo `ls -alL $check_file`							>> ./$FILENAME.log 2>&1
		       else
			echo $check_file "There is no files "						>> ./$FILENAME.log 2>&1
		    fi
		done
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
elif [ $OS = "HP-UX" ]; then
	echo "CHECK SUID & SGID"									>> ./$FILENAME.log 2>&1
		FILES="/opt/perf/bin/glance /usr/dt/bin/dtprintinfo /usr/sbin/swreg /opt/perf/bin/gpm /usr/sbin/arp /usr/sbin/swremove
				/opt/video/lbin/camServer /usr/sbin/lanadmin /usr/contrib/bin/traceroute /usr/bin/at /usr/sbin/landiag
				/usr/dt/bin/dtappgather /usr/bin/lpalt /usr/sbin/lpsched /usr/sbin/swmodify /usr/bin/mediainit
				/usr/sbin/swacl /usr/sbin/swpackage /usr/bin/newgrp /usr/sbin/swconfig /usr/bin/rdist /usr/sbin/swinstall"
		for check_file in $FILES
		  do
		    if [ -f $check_file ];
		      then
			echo `ls -alL $check_file`							>> ./$FILENAME.log 2>&1
		       else
			echo $check_file "There is no files "						>> ./$FILENAME.log 2>&1
		    fi
		done
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
elif [ $OS == "Linux" ]; then
	echo "[CHECK SUID & SGID]"									>> ./$FILENAME.log 2>&1
		FILES="/sbin/dump /sbin/restore /sbin/unix_chkpwd /usr/bin/at /usr/bin/lpq
		   /usr/bin/lpq-lpd /usr/bin/lpr /usr/bin/lpr-lpd /usr/bin/lprm /usr/bin/lprm-lpd
			/usr/bin/newgrp /usr/sbin/lpc /usr/sbin/lpc-lpd /usr/sbin/traceroute"
		for check_file in $FILES
		  do
		    if [ -f $check_file ];
		      then
			echo `ls -alL $check_file`							>> ./$FILENAME.log 2>&1
		       else
			echo $check_file "There is no files "						>> ./$FILENAME.log 2>&1
		    fi
		done
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " "											>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " "											>> ./$FILENAME.log 2>&1
elif [ $OS == "SunOS" ]; then
	echo "[CHECK SUID & SGID]"									>> ./$FILENAME.log 2>&1
		FILES="/usr/bin/admintool /usr/bin/at /usr/bin/atq /usr/bin/atrm /usr/bin/lpset /usr/bin/newgrp /usr/bin/nispasswd
			/usr/bin/rdist /usr/bin/yppasswd /usr/dt/bin/dtappgather /usr/dt/bin/dtprintinfo /usr/dt/bin/sdtcm_convert
			/usr/lib/fs/ufs/ufsdump /usr/lib/fs/ufs/ufsrestore /usr/lib/lp/bin/netpr /usr/openwin/bin/ff.core
			/usr/openwin/bin/kcms_calibrate /usr/openwin/bin/kcms_configure /usr/openwin/bin/xlock
			/usr/platform/sun4u/sbin/prtdiag /usr/sbin/arp /usr/sbin/lpmove /usr/sbin/prtconf
			/usr/sbin/sysdef /usr/sbin/sparcv7/prtconf /usr/sbin/sparcv7/sysdef /usr/sbin/sparcv9/prtconf /usr/sbin/sparcv9/sysdef"
		for check_file in $FILES
		  do
		    if [ -f $check_file ];
		      then
			echo `ls -alL $check_file`							>> ./$FILENAME.log 2>&1
		       else
			echo $check_file "There is no files "						>> ./$FILENAME.log 2>&1
		    fi
		done
		echo " "										>> ./$FILENAME.log 2>&1
		echo " "										>> ./$FILENAME.log 2>&1
	echo "+++++"											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
fi
echo "##### U-13 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-14 Major file owner and permission check"
echo "##### U-14 Major file owner and permission check"			>> ./$FILENAME.log 2>&1
	ls -al $PROFILE											>> ./$FILENAME.log 2>&1
	HOMEDIRS=`cat $PASSWD | grep -v 'nologin' | grep -v 'false' | grep -v "#" | awk -F":" 'length($6) > 0 {print $6}' | sort -u`
	FILES=".profile .cshrc .kshrc .login .bash_profile .bashrc .bash_login .exrc .netrc .history .sh_history .bash_history .dtprofile"


	for dir in $HOMEDIRS
	do
	  for file in $FILES
	  do
	    FILE=$dir/$file
	    if [ -f $FILE ];
	      then
			ls -alL $FILE									>> ./$FILENAME.log 2>&1
	    fi
	  done
	done
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " "												>> ./$FILENAME.log 2>&1
echo "##### U-14 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-15 world writable file check"
echo "##### U-15 world writable file check"											>> ./$FILENAME.log 2>&1
	find /usr /dev /etc /var /tmp /home /root -xdev -type f -perm -2 -exec ls -al {} \; > u-15.txt 2>&1
	if [ `ls -al u-15.txt | awk '{ print $5 }'` -le 1 ]; then
		echo "World writable files does not exist."						>> ./$FILENAME.log 2>&1
	else
		echo "World writable files is exist"							>> ./$FILENAME.log 2>&1
		(cat u-15.txt)										>> ./$FILENAME.log 2>&1
	fi
	rm -rf u-15.txt
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "##### U-15 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-16 /dev directory check"
echo "##### U-16 /dev directory check"											>> ./$FILENAME.log 2>&1
	find /dev -type f -exec ls -al {} \;								>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " "												>> ./$FILENAME.log 2>&1
echo "##### U-16 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-17 $HOME/.rhosts / hosts.equiv check"
echo "##### U-17 start"											>> ./$FILENAME.log 2>&1
echo "[ Case 1 : hosts.equiv : permission check ]"							>> ./$FILENAME.log 2>&1
	ls -al $HOSTS_EQUIV										>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ Case 1 : hosts.equiv : configuration check ]"							>> ./$FILENAME.log 2>&1
	(cat $HOSTS_EQUIV | grep -v "#") 								>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ /.rhosts : check configuration ]"								>> ./$FILENAME.log 2>&1
	HOMEDIRS=`cat $PASSWD | grep -v '/bin/false' | awk -F":" 'length($6) > 0 {print $6}' | sort -u`
	FILES=".rhosts"
	for dir in $HOMEDIRS
	do
	  for file in $FILES
	  do
	    FILE=$dir/$file
	    if [ -f $FILE ]
	      then
			echo "- $FILE"									>> ./$FILENAME.log 2>&1
			echo "[ Case 2 : .rhosts : permission check ]"					>> ./$FILENAME.log 2>&1
			ls -al $FILE									>> ./$FILENAME.log 2>&1
			echo "+++++" 									>> ./$FILENAME.log 2>&1
			echo " " 									>> ./$FILENAME.log 2>&1
			echo "[ Case 2 : .rhosts : configuration check ]"				>> ./$FILENAME.log 2>&1
			(cat $FILE)									>> ./$FILENAME.log 2>&1
			echo "+++++" 									>> ./$FILENAME.log 2>&1
			echo " " 									>> ./$FILENAME.log 2>&1
	    fi
	  done
	done
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "##### U-17 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-18 Remote access IP and Port"
echo "##### U-18 Remote access IP and Port"								>> ./$FILENAME.log 2>&1
echo "[ Check 1 : /etc/hosts.allow : permission check ]"						>> ./$FILENAME.log 2>&1
	ls -al /etc/hosts.allow										>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ Check 1 : /etc/hosts.allow : content check ]"							>> ./$FILENAME.log 2>&1
	(cat /etc/hosts.allow || echo "[no config]")							>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ Check 2 : /etc/hosts.deny : permission check ]"							>> ./$FILENAME.log 2>&1
	ls -al /etc/hosts.deny										>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ Check 2 : /etc/hosts.deny :  content check ]"							>> ./$FILENAME.log 2>&1
	(cat /etc/hosts.deny || echo "[no config]") 							>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
if [ $OS = "HP-UX" ]; then
	echo "[ Check 3 : /var/adm/inetd.sec : permission check ]"					>> ./$FILENAME.log 2>&1
		ls -al /var/adm/inetd.sec								>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	echo "[ Check 3 : /var/adm/inetd.sec : content check ]"						>> ./$FILENAME.log 2>&1
		(cat /var/adm/inetd.sec || echo "[no config]") 						>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
elif [ $OS == "Linux" ]; then
	echo "[ Check 3 : /etc/sysconfig/iptables : permission check ]"					>> ./$FILENAME.log 2>&1
		ls -al /etc/sysconfig/iptables								>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	echo "[ Check 3 : /etc/sysconfig/iptables : content check ]"					>> ./$FILENAME.log 2>&1
		(cat /etc/sysconfig/iptables || echo "[no config]") 					>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
fi
echo "##### U-18 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-55 hosts.lpd file owner and permission check"
echo "##### U-55 hosts.lpd file owner and permission check"						>> ./$FILENAME.log 2>&1
	ls -al $LPD 						 					>> ./$FILENAME.log 2>&1
echo "+++++"												>> ./$FILENAME.log 2>&1
echo " "												>> ./$FILENAME.log 2>&1
echo "##### U-55 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

# -echo "U-56 NIS service check"
#echo "##### U-56 NIS service check"											>> ./$FILENAME.log 2>&1
#if [ $OS == "SunOS" ]; then
#	echo "[ Case 1 : nis service check ]"								>> ./$FILENAME.log 2>&1
#	(svcs -a | grep nis)										>> ./$FILENAME.log 2>&1
#	echo "+++++"											>> ./$FILENAME.log 2>&1
#	echo " " 											>> ./$FILENAME.log 2>&1
#	echo "[ Case 2 : yp* service check ]"								>> ./$FILENAME.log 2>&1
#	(ps -ef | egrep "ypserv|ypbind|ypxfrd|rpc.yppasswdd|rpc.ypupdated" | grep -v "grep" || echo "[ NIS servcie : disable ]")							 >> ./$FILENAME.log 2>&1
#	(svcs -a | egrep "ypserv|ypbind|ypxfrd|rpc.yppasswdd|rpc.ypupdated" | grep -v "grep" || echo "[ NIS servcie : disable ]")							 >> ./$FILENAME.log 2>&1
#	echo "+++++"											>> ./$FILENAME.log 2>&1
#	echo " " 											>> ./$FILENAME.log 2>&1
#else
#	(ps -ef | egrep "ypserv|ypbind|ypxfrd|rpc.yppasswdd|rpc.ypupdated" | grep -v "grep" || echo "[ NIS servcie : disable ]")							>> ./$FILENAME.log 2>&1
#	echo "+++++" 											>> ./$FILENAME.log 2>&1
#	echo " "											>> ./$FILENAME.log 2>&1
#fi
#echo "##### U-56 finish"										>> ./$FILENAME.log 2>&1
#echo " " 												>> ./$FILENAME.log 2>&1

echo "U-56 UMASK check"
echo "##### U-56 UMASK check"											>> ./$FILENAME.log 2>&1
echo "[ Case 1 : umask command ]"									>> ./$FILENAME.log 2>&1
	umask												>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " "												>> ./$FILENAME.log 2>&1
echo "[ Case 2 : umask in /etc/profile ]" 								>> ./$FILENAME.log 2>&1
	(cat $PROFILE | grep -i umask || echo "[no config]") 						>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " "												>> ./$FILENAME.log 2>&1
if [ $OS == "AIX" ]; then
	echo "[ Case 3 : umask in /etc/security/user ]"	 						>> ./$FILENAME.log 2>&1
		(egrep ":$|umask" $PASSWD_CONF)								>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
elif [ $OS = "HP-UX" ]; then
	echo "[ Case 3 : umask in /etc/default/login ]"	 						>> ./$FILENAME.log 2>&1
		(cat /etc/default/login | grep -i umask || echo "[no config]")				>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
elif [ $OS == "Linux" ]; then
	echo "[ Case 3 : umask in /etc/default/login ]"	 						>> ./$FILENAME.log 2>&1
	    ls -al $LOGIN_CONF 										>> ./$FILENAME.log 2>&1
		(cat $LOGIN_CONF | grep -i umask	|| echo "[no config]")				>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " "											>> ./$FILENAME.log 2>&1
elif [ $OS == "SunOS" ]; then
	echo "[ Case 3 : umask in /etc/default/login ]"	 						>> ./$FILENAME.log 2>&1
		(cat $LOGIN_CONF | grep -i umask || echo "[no config]")					>> ./$FILENAME.log 2>&1
	echo "+++++"											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
fi
echo "##### U-56 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-57 HOME directory owner and permission check"
echo "##### U-57 HOME directory owner and permission check"					>> ./$FILENAME.log 2>&1
	HOMEDIRS=`cat $PASSWD | grep -v 'nologin' | grep -v 'false' | awk -F: 'length($6) > 0 {print $6}' | sort -u`

         for dir in $HOMEDIRS
          do
            ls -dal $dir 										>> ./$FILENAME.log 2>&1
         done
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " "												>> ./$FILENAME.log 2>&1
echo "##### U-57 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-58 HOME directory existence"
echo "##### U-58 HOME directory existence"											>> ./$FILENAME.log 2>&1
if [ $OS == "AIX" ]; then
	HOMEDIRS=`cat $PASSWD | grep -v 'nologin' | grep -v 'false' | awk -F: 'length($6) > 0 {print $1, $6}'`
	USERS=`cat $PASSWD | grep -v 'nologin' | grep -v 'false' | awk -F: '{print $1}'`

		for user in $USERS; do
			if [ ! -d `awk -F: -v "usr=${user}" '{ if ( $1==usr ) print $6 }' $PASSWD` ]; then
				echo "[ Home Directory does not exist ]"						>> ./$FILENAME.log 2>&1
				echo "$user : " `awk -F: -v "usr=${user}" '{ if ( $1==usr ) print $6 }' $PASSWD`	>> u-58.txt 2>&1
			fi
		done

	echo "+++++" 													>> ./$FILENAME.log 2>&1
	echo " "													>> ./$FILENAME.log 2>&1
	
		if [ `ls -al u-58.txt | awk '{print $5}'` -gt 0 ]; then
			echo "Home Directory is OK"									>> ./$FILENAME.log 2>&1
		else
			cat u-58.txt											>> ./$FILENAME.log 2>&1
			rm -rf u-58.txt
		fi

	echo "+++++" 													>> ./$FILENAME.log 2>&1
	echo " "													>> ./$FILENAME.log 2>&1
	
	awk -F: '{print $1, $6}' $PASSWD									>> ./$FILENAME.log 2>&1

	echo "+++++" 													>> ./$FILENAME.log 2>&1
	echo " "													>> ./$FILENAME.log 2>&1
elif [ $OS = "HP-UX" ]; then
	HOMEDIRS=`cat $PASSWD | grep -v 'nologin' | grep -v 'false' | awk -F: 'length($6) > 0 {print $6}' | sort -u`

         for dir in $HOMEDIRS
          do
	    echo "----------<" ${dir} ">----------"									>> ./$FILENAME.log 2>&1
            ls -ad $dir 												>> ./$FILENAME.log 2>&1
         done
	echo "+++++"											>> ./$FILENAME.log 2>&1
	echo " "											>> ./$FILENAME.log 2>&1
	
	awk -F: '{print $1, $6}' $PASSWD									>> ./$FILENAME.log 2>&1	
	echo "+++++" 													>> ./$FILENAME.log 2>&1
	echo " " 													>> ./$FILENAME.log 2>&1
elif [ $OS == "Linux" ]; then
	HOMEDIRS=`cat $PASSWD | grep -v 'nologin' | grep -v 'false' | awk -F: 'length($6) > 0 {print $1, $6}'`
	USERS=`cat $PASSWD | grep -v 'nologin' | grep -v 'false' | awk -F: '{print $1}'`

	for user in $USERS; do
		if [ ! -d `awk -F: -v "usr=${user}" '{ if ( $1==usr ) print $6 }' $PASSWD` ]; then
			echo "[ Home Directory does not exist ]"							>> ./$FILENAME.log 2>&1
			echo "$user : " `awk -F: -v "usr=${user}" '{ if ( $1==usr ) print $6 }' $PASSWD`		>> ./u-58.txt 2>&1
		fi
	done
	
	echo "+++++"											>> ./$FILENAME.log 2>&1
	echo " "											>> ./$FILENAME.log 2>&1
	
	if [ `ls -al u-58.txt | awk '{print $5}'` -gt 0 ]; then
		echo "Home Directory is OK"										>> ./$FILENAME.log 2>&1
	else
		cat u-58.txt												>> ./$FILENAME.log 2>&1
		rm -rf u-58.txt
	fi
	
	echo "+++++"											>> ./$FILENAME.log 2>&1
	echo " "											>> ./$FILENAME.log 2>&1
		
	awk -F: '{print $1, $6}' $PASSWD									>> ./$FILENAME.log 2>&1
	
	echo "+++++" 													>> ./$FILENAME.log 2>&1
	echo " "													>> ./$FILENAME.log 2>&1
elif [ $OS == "SunOS" ]; then
	HOMEDIRS=`cat $PASSWD | grep -v 'nologin' | grep -v 'false' | awk -F: 'length($6) > 0 {print $6}' | sort -u`

         for dir in $HOMEDIRS
          do
	    echo "----------<" ${dir} ">----------"									>> ./$FILENAME.log 2>&1
            ls -ad $dir 												>> ./$FILENAME.log 2>&1
         done
	
	echo "+++++"											>> ./$FILENAME.log 2>&1
	echo " "											>> ./$FILENAME.log 2>&1
		
	awk -F: '{print $1, $6}' $PASSWD									>> ./$FILENAME.log 2>&1
		
	echo "+++++" 													>> ./$FILENAME.log 2>&1
	echo " " 													>> ./$FILENAME.log 2>&1
fi
echo "##### U-58 finish"												>> ./$FILENAME.log 2>&1
echo " " 														>> ./$FILENAME.log 2>&1

echo "U-59 Hidden file and directory"
echo "##### U-59 Hidden file and directory"													>> ./$FILENAME.log 2>&1
echo "[ Case 1 ] "													>> ./$FILENAME.log 2>&1
	HOMEDIRS=`cat $PASSWD | grep -v 'nologin' | grep -v 'false' | awk -F: 'length($6) > 0 {print $6}' | sort -u`

         for dir in $HOMEDIRS
          do
	    echo "----------<" ${dir} ">----------"							>> ./$FILENAME.log 2>&1
	  		 ls -a $dir | grep "^\."							>> ./$FILENAME.log 2>&1
         done
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " "												>> ./$FILENAME.log 2>&1
echo "[ Case 2 ] "											>> ./$FILENAME.log 2>&1
	find / -xdev -iname ".*" -type f -perm -1 -exec ls -al {} \;					>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " "												>> ./$FILENAME.log 2>&1
echo "##### U-59 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1


echo "U-19 Finger service"
echo "##### U-19 Finger service"											>> ./$FILENAME.log 2>&1
echo "[ Check 1 : Case 1 : /etc/inetd.conf : service check ]"			 			>> ./$FILENAME.log 2>&1
	(cat $INETD_CONF | grep finger || echo "Finger service : disable")				>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ Check 1 : Case 2 : /etc/xinetd.d : service check]"			 			>> ./$FILENAME.log 2>&1
	(ls -al /etc/xinetd.d | grep finger)								>> ./$FILENAME.log 2>&1
	(cat /etc/xinetd.d/finger | egrep "service|disable" )						>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ Check 1 : Case 3 : inetadm : Solaris 5.10 above version check]"			 			>> ./$FILENAME.log 2>&1
	(inetadm | grep finger)								>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ Check 2 : finger Process ]"			 						>> ./$FILENAME.log 2>&1
	(ps -ef | grep finger | grep -v grep || echo "Finger service : disable")			>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " "												>> ./$FILENAME.log 2>&1
echo "##### U-19 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-20 Anonymous FTP"
echo "##### U-20 Anonymous FTP"											>> ./$FILENAME.log 2>&1
if [ $OS == "SunOS" ]; then
	echo "[ Case 1 : Check 1 : FTP service  ]"							>> ./$FILENAME.log 2>&1
		svcs -p "*ftp*"										>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
else
	echo "[ Case 1 : Check 1 : FTP service ]"			 				>> ./$FILENAME.log 2>&1
		(ps -ef | grep ftp | grep -v grep) 							>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
fi
echo "[ Case 1 : Check 2 : FTP port ]"									>> ./$FILENAME.log 2>&1
	(netstat -an | grep :21 | grep LISTEN)								>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ Case 1 : Check 3 : FTP account ]"								>> ./$FILENAME.log 2>&1
	(cat $PASSWD | grep '^ftp' | grep -v grep) 							>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "##### U-20 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-21 r service"
echo "##### U-21 r service"											>> ./$FILENAME.log 2>&1
if [ $OS == "AIX" ]; then
	echo "[ Check point 1 : r command in /etc/inetd.conf ]" 						>> ./$FILENAME.log 2>&1
		(cat $INETD_CONF | grep -v '^#' | egrep 'rsh|rlogin|rexec' || echo "[ no r command ]")	>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Check point 2 : r command process ]" 								>> ./$FILENAME.log 2>&1
		(ps -ef | egrep 'rsh|rlogin|rexec' | grep -v grep || echo rsh,rlogin,rexec no process)	>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Check point 3 : Case 1 : /etc/hosts.equiv ]"							>> ./$FILENAME.log 2>&1
		(cat $HOSTS_EQUIV | grep -v '#') 								>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Check point 3 : Case 2 : /.rhosts ]"								>> ./$FILENAME.log 2>&1
		HOMEDIRS=`cat $PASSWD | grep -v '/bin/false' | awk -F":" 'length($6) > 0 {print $6}' | sort -u`
		FILES=".rhosts"

		for file in $FILES
		  do
		    FILE=$FILES
		    if [ -f $FILE ];
		      then
			ls -alL $FILE										>> ./$FILENAME.log 2>&1
		    fi
		  done

		for dir in $HOMEDIRS
		do
		  for file in $FILES
		  do
		    FILE=$dir/$file
		    if [ -f $FILE ];
		      then
				echo "- $FILE"									>> ./$FILENAME.log 2>&1
				cat $FILE									>> ./$FILENAME.log 2>&1
		    fi
		  done
		done
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
elif [ $OS = "HP-UX" ]; then
	echo "[ Check point 1 : r command in /etc/inetd.conf ]" 						>> ./$FILENAME.log 2>&1
		(cat $INETD_CONF | grep -v '^#' | egrep 'rsh|rlogin|rexec')					>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Check point 2 : r command process ]" 								>> ./$FILENAME.log 2>&1
		(ps -ef | egrep 'rsh|rlogin|rexec' | grep -v grep || echo rsh,rlogin,rexec no process)	>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Check point 3 : Case 1 : /etc/hosts.equiv ]"							>> ./$FILENAME.log 2>&1
		cat $HOSTS_EQUIV 										>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Check point 3 : Case 2 : /.rhosts ]"								>> ./$FILENAME.log 2>&1
		HOMEDIRS=`cat $PASSWD | grep -v '/bin/false' | awk -F":" 'length($6) > 0 {print $6}' | sort -u`
		FILES=".rhosts"
		for dir in $HOMEDIRS
		do
		  for file in $FILES
		  do
		    FILE=$dir/$file
		    if [ -f $FILE ];
		      then
				echo "- $FILE"									>> ./$FILENAME.log 2>&1
				cat $FILE									>> ./$FILENAME.log 2>&1
		    fi
		  done
		done
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
elif [ $OS == "Linux" ]; then												>> ./$FILENAME.log 2>&1
	echo "[ Check point 1 : Case 1 : r command in /etc/inetd.conf ]" 					>> ./$FILENAME.log 2>&1
		(cat $INETD_CONF | grep -v '^#' | egrep 'rsh|rlogin|rexec' || echo "[ no r commands ]")	>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Check point 1 : Case 2 : r command in /etc/xinetd.conf ]" 					>> ./$FILENAME.log 2>&1
		(ls -al /etc/xinetd.d | grep -v '^#' | egrep 'rsh|rlogin|rexec' || echo "[ no r commands ]")>> ./$FILENAME.log 2>&1
		echo " " 											>> ./$FILENAME.log 2>&1
		(cat /etc/xinetd.d/rsh || echo "[ rsh service : disable ]")					>> ./$FILENAME.log 2>&1
		echo " " 											>> ./$FILENAME.log 2>&1
		(cat /etc/xinetd.d/rlogin || echo "[ rlogin service : disable ]")				>> ./$FILENAME.log 2>&1
		echo " " 											>> ./$FILENAME.log 2>&1
		(cat /etc/xinetd.d/rexec || echo "[ rexec service : disable ]")					>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Check point 2 : r command process ]" 								>> ./$FILENAME.log 2>&1
		(ps -ef | egrep 'rsh|rlogin|rexec' | grep -v grep || echo rsh,rlogin,rexec no process)	>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Check point 3 : Case 1 : /etc/hosts.equiv ]"							>> ./$FILENAME.log 2>&1
		cat $HOSTS_EQUIV 										>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Check point 3 : Case 2 : /.rhosts ]"								>> ./$FILENAME.log 2>&1
		HOMEDIRS=`cat $PASSWD | grep -v '/bin/false' | awk -F":" 'length($6) > 0 {print $6}' | sort -u`
		FILES=".rhosts"

		for file in $FILES
		  do
		    FILE=$FILES
		    if [ -f $FILE ];
		      then
			ls -alL $FILE										>> ./$FILENAME.log 2>&1
		    fi
		  done

		for dir in $HOMEDIRS
		do
		  for file in $FILES
		  do
		    FILE=$dir/$file
		    if [ -f $FILE ];
		      then
				echo "- $FILE"									>> ./$FILENAME.log 2>&1
				cat $FILE									>> ./$FILENAME.log 2>&1
		    fi
		  done
		done
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
elif [ $OS == "SunOS" ]; then   ## SunOS = Solaris
	echo "[ Check point 1 : Case 1 : r command ]" 								>> ./$FILENAME.log 2>&1
		(cat ./portlog.log | egrep 'rsh|rlogin|rexec' || echo "[ no r command ]")			>> ./$FILENAME.log 2>&1
	echo "+++++"												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Check point 2 : Case 1 : /etc/hosts.equiv ]"							>> ./$FILENAME.log 2>&1
		(cat $HOSTS_EQUIV | grep -v '#') 								>> ./$FILENAME.log 2>&1
	echo "+++++"												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Check point 2 : Case 2 : /.rhosts ]"								>> ./$FILENAME.log 2>&1
		HOMEDIRS=`cat $PASSWD | grep -v '/bin/false' | awk -F":" 'length($6) > 0 {print $6}' | sort -u`
		FILES=".rhosts"
		for dir in $HOMEDIRS
		do
		  for file in $FILES
		  do
		    FILE=$dir/$file
		    if [ -f $FILE ];
		      then
				echo "- $FILE"									>> ./$FILENAME.log 2>&1
				cat $FILE									>> ./$FILENAME.log 2>&1
		    fi
		  done
		done
	echo "+++++"												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	echo "[ Check point 3 : Case 1 : SOLARIS ~5.9 below version ]"								>> ./$FILENAME.log 2>&1
		(cat /etc/inetd.conf | egrep 'rsh|rlogin|rexec' || echo "[ no r command ]")			>> ./$FILENAME.log 2>&1
	echo "+++++"											>> ./$FILENAME.log 2>&1
	echo " "											>> ./$FILENAME.log 2>&1
	echo "[ Check point 3 : Case 2 : SOLARIS 5.10~ above version ]"								>> ./$FILENAME.log 2>&1
		(inetadm | egrep 'shell|rlogin|rexec' || echo "[ no r command ]")			>> ./$FILENAME.log 2>&1
	echo "+++++"											>> ./$FILENAME.log 2>&1
	echo " "											>> ./$FILENAME.log 2>&1
		
	
fi

echo "##### U-21 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-22 cron file owner anc permission Check"
echo "##### U-22 cron file owner anc permission Check"							>> ./$FILENAME.log 2>&1
	ls -al $CRON_ALLOW $CRON_DENY									>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " "												>> ./$FILENAME.log 2>&1
echo "##### U-22 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-23 Related DoS attack : echo, discard, daytime, chargen"
echo "##### U-23 Related DoS attack : echo, discard, daytime, chargent"			>> ./$FILENAME.log 2>&1
if [ $OS == "Linux" ]; then
	echo "[ Check Point 1 : inetd.conf  ]"										>> ./$FILENAME.log 2>&1
		(cat $INETD_CONF | grep -v '^#' | egrep 'echo|discard|daytime|chargen' || echo "[ echo,discard,daytime,chargen service : disable ]")		>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	echo "[ Check Point 2 : /etc/xinetd.d  ]"							>> ./$FILENAME.log 2>&1
		(ls -al /etc/xinetd.d | grep -v '^#' | egrep 'echo|discard|daytime|chargen' || echo "[ echo,discard,daytime,chargen service : disable ]")	>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	echo "[ Check Point 3 : Process ]" 								>> ./$FILENAME.log 2>&1
		(ps -ef | egrep 'echo|discard|daytime|chargen' | grep -v grep || echo "[ echo,discard,daytime,chargen service : disable ]")			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
elif [ $OS == "SunOS" ]; then
	### Check Point 1 NEED CHECK ###
	echo "[ Check Point 1 : inetd.conf ]"								>> ./$FILENAME.log 2>&1
		(cat $INETD_CONF | grep -v '^#' | egrep 'echo|discard|daytime|chargen' || echo "[ echo,discard,daytime,chargen service : disable ]")																					>> ./$FILENAME.log 2>&1
	echo "+++++"											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	echo "[ Check Point 2 : Process ]" 								>> ./$FILENAME.log 2>&1
		(svcs -a | egrep 'echo|discard|daytime|chargen' || echo "[ echo,discard,daytime,chargen service : disable ]")				   			>> ./$FILENAME.log 2>&1
		(cat ./portlog.log | egrep 'echo|discard|daytime|chargen' || echo "[ echo,discard,daytime,chargen service : disable ]")				>> ./$FILENAME.log 2>&1
		(ps -ef | egrep 'echo|discard|daytime|chargen' | grep -v grep || echo "[ echo,discard,daytime,chargen service : disable ]")			>> ./$FILENAME.log 2>&1
	echo "+++++"											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	echo "[ Check Point 3 : Process (Solaris 5.10 above version) ]"								>> ./$FILENAME.log 2>&1
		(inetadm | grep enable | egrep 'echo|discard|daytime|chargen' || echo "[ echo,discard,daytime,chargen service : disable ]")																					>> ./$FILENAME.log 2>&1
	echo "+++++"											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
else
	echo "[ Check Point 1 : inetd.conf  ]"								>> ./$FILENAME.log 2>&1
		(cat $INETD_CONF | grep -v '^#' | egrep 'echo|discard|daytime|chargen' || echo "[ echo,discard,daytime,chargen service : disable ]")		>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	echo "[ Check Point 2 : Process ]" 								>> ./$FILENAME.log 2>&1
		(ps -ef | egrep 'echo|discard|daytime|chargen' | grep -v grep || echo "[ echo,discard,daytime,chargen service : disable ]")			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " "											>> ./$FILENAME.log 2>&1
fi
echo "##### U-23 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-24 NFS service"
echo "##### U-24 NFS service"											>> ./$FILENAME.log 2>&1
if [ $OS == "SunOS" ]; then
	echo "[ Check : Case 1: NFS service(svcs -p "*nfs*") ]"									>> ./$FILENAME.log 2>&1
		svcs -p "*nfs*"										>> ./$FILENAME.log 2>&1
	echo "+++++"											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	echo "[ Check : Case 2: NFS service(inetadm | egrep "nfs|stats|lockd") ]"									>> ./$FILENAME.log 2>&1
		(inetadm | egrep 'nfs|statd|lockd')										>> ./$FILENAME.log 2>&1
	echo "+++++"											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
else
	echo "[ Check : NFS service ]"									>> ./$FILENAME.log 2>&1
		(ps -ef | egrep 'nfs|statd|lockd' | grep -v grep || echo "[ NFS service : disable ]" ) 	>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
fi
echo "##### U-24 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-25 NFS access control"
echo "##### U-25 NFS access control"											>> ./$FILENAME.log 2>&1
if [ $OS == "AIX" ]; then
	echo "[ Check Point 1 : /etc/exports : check permission ]"					>> ./$FILENAME.log 2>&1
		(ls -al $NFS_CONF)									>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	echo "[ Check Point 2 : /etc/exports : check configuration ]"					>> ./$FILENAME.log 2>&1
		(cat $NFS_CONF || echo "[ no config ]")							>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	echo "[ Check Point 3 : share ] "								>> ./$FILENAME.log 2>&1
		share											>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
elif [ $OS = "HP-UX" ]; then
	echo "[ Case 1 : Check Point 1 : /etc/exports : check permission ]"				>> ./$FILENAME.log 2>&1
		(ls -al $NFS_CONF)									>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	echo "[ Case 1 : Check Point 2 : /etc/exports : check configuration ]"				>> ./$FILENAME.log 2>&1
		(cat $NFS_CONF || echo "[ no config ]")							>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	echo "[ Case 1 : Check Point 3 : share ] "							>> ./$FILENAME.log 2>&1
		share											>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	echo "[ Case 2 : Check Point 1 : /etc/dfs/dfstab : check permission ]"				>> ./$FILENAME.log 2>&1
		(ls -al /etc/dfs/dfstab)								>> ./$FILENAME.log 2>&1
	echo "+++++"											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	echo "[ Case 2 : Check Point 2 : /etc/dfs/dfstab : check configuration ]"			>> ./$FILENAME.log 2>&1
		(cat /etc/dfs/dfstab || echo "[ no config ]")							>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	echo "[ Case 2 : Check Point 3 : share ] "							>> ./$FILENAME.log 2>&1
		share											>> ./$FILENAME.log 2>&1
	echo "+++++"											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	echo "[ Case 3 : Check Point 1 : /etc/dfs/sharetab : check permission ]"				>> ./$FILENAME.log 2>&1
		(ls -al /etc/dfs/sharetab)								>> ./$FILENAME.log 2>&1
	echo "+++++"											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	echo "[ Case 3 : Check Point 2 : /etc/dfs/sharetab : check configuration ]"			>> ./$FILENAME.log 2>&1
		(cat /etc/dfs/sharetab || echo "[ no config ]")							>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	echo "[ Case 3 : Check Point 3 : share ] "							>> ./$FILENAME.log 2>&1
		share											>> ./$FILENAME.log 2>&1
	echo "+++++"											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
elif [ $OS == "Linux" ]; then
	echo "[ Check Point 1 : /etc/exports : check permission ]"					>> ./$FILENAME.log 2>&1
		(ls -al $NFS_CONF)									>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	echo "[ Check Point 2 : /etc/exports : check configuration ]"					>> ./$FILENAME.log 2>&1
		(cat $NFS_CONF || echo "[ no config ]")							>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	echo "[ Check Point 3 : share ] "								>> ./$FILENAME.log 2>&1
		share											>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
elif [ $OS == "SunOS" ]; then
	echo "[ Case 1 :  Check Point 1 : /etc/dfs/dfstab : check permission ]"					>> ./$FILENAME.log 2>&1
		(ls -al /etc/dfs/dfstab)								>> ./$FILENAME.log 2>&1
	echo "+++++"											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	echo "[ Case 1 :  Check Point 2 : /etc/dfs/dfstab : check configuration ]"				>> ./$FILENAME.log 2>&1
		(cat $NFS_CONF || echo "[ no config ]")							>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	echo "[ Case 1 :  Check Point 3 : share ] "								>> ./$FILENAME.log 2>&1
		share											>> ./$FILENAME.log 2>&1
	echo "+++++"											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	echo "[ Case 2 : Check Point 1 : /etc/dfs/sharetab : check permission ]"				>> ./$FILENAME.log 2>&1
		(ls -al /etc/dfs/sharetab)								>> ./$FILENAME.log 2>&1
	echo "+++++"											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	echo "[ Case 2 : Check Point 2 : /etc/dfs/sharetab : check configuration ]"			>> ./$FILENAME.log 2>&1
		(cat /etc/dfs/sharetab || echo "[ no config ]")							>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1	
	echo "[ Case 2 :  Check Point 3 : share ] "								>> ./$FILENAME.log 2>&1
		share											>> ./$FILENAME.log 2>&1
	echo "+++++"											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
fi
echo "##### U-25 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-26 automount"
echo "##### U-26 automount"											>> ./$FILENAME.log 2>&1
if [ $OS == "SunOS" ]; then
	echo "[ Check point 1 : svcs -p "*autofs*"]"											>> ./$FILENAME.log 2>&1	
	svcs -p "*autofs*"										>> ./$FILENAME.log 2>&1
	echo "[ Check point 2 : ps -ef | grep automount]"											>> ./$FILENAME.log 2>&1	
	(ps -ef | grep automount)									>> ./$FILENAME.log 2>&1
	echo "+++++"											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
else
	(ps -ef | grep automount)									>> ./$FILENAME.log 2>&1
	echo "+++++"											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1

fi
echo "##### U-26 finish"										>> ./$FILENAME.log 2>&1

echo "U-27 RPC service"
echo "##### U-27 RPC service"											>> ./$FILENAME.log 2>&1
if [ $OS == "SunOS" ]; then
	svcs -p "*rpc*"											>> ./$FILENAME.log 2>&1
	echo "+++++"											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
else
	echo "[ Check point 1 : Case 1 : $INETD_CONF ]" 						>> ./$FILENAME.log 2>&1
		(cat $INETD_CONF | grep -v '^#' | egrep 'rpc.cmsd|rusersd|rstatd|rpc.statd|kcms_server|rpc.ttdbserverd|Walld|rpc.nids|rpc.ypupdated|cachefsd|sadmind|sprayd|rpc.pcnfsd|rexd|rpc.rquotad')	>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	if [ $OS == "Linux" ]; then
		echo "[ Check point 1 : Case 2 : /etc/xinetd.d ]" 					>> ./$FILENAME.log 2>&1
			(ls -al /etc/xinetd.d | grep -v '^#' | egrep 'rpc.cmsd|rusersd|rstatd|rpc.statd|kcms_server|rpc.ttdbserverd|Walld|rpc.nids|rpc.ypupdated|cachefsd|sadmind|sprayd|rpc.pcnfsd|rexd|rpc.rquotad')	>> ./$FILENAME.log 2>&1
		echo "+++++" 										>> ./$FILENAME.log 2>&1
		echo " " 										>> ./$FILENAME.log 2>&1
	fi
	echo "[ Check Point 2 : rpc Process ]" 								>> ./$FILENAME.log 2>&1
		(ps -ef | egrep 'rpc.cmsd|rusersd|rstatd|rpc.statd|kcms_server|rpc.ttdbserverd|Walld|rpc.nids|rpc.ypupdated|cachefsd|sadmind|sprayd|rpc.pcnfsd|rexd|rpc.rquotad' | grep -v grep) >> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
fi
echo "##### U-27 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-28 NIS, NIS+ service"
echo "##### U-28 NIS, NIS+ service"											>> ./$FILENAME.log 2>&1
if [ $OS == "SunOS" ]; then
	(cat ./portlog.log | egrep 'ypserv|ypbind|rpc.yppasswdd|ypxfrd|rpc.ypupdate' || echo "[ NIS service : disable ]")				>> ./$FILENAME.log 2>&1
	echo "+++++"											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
else
	(ps -ef | grep -v 'grep' | egrep 'ypserv|ypbind|rpc.yppasswdd|ypxfrd|rpc.ypupdate' | grep -v grep || echo "[ NIS service : disable ]") 		>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
fi
echo "##### U-28 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-29 tftp, talk, ntalk service"
echo "##### U-29 tftp, talk, ntalk service"											>> ./$FILENAME.log 2>&1
if [ $OS == "SunOS" ]; then
	echo "[ Check Point 1 : $INTED_CONF ]" 								>> ./$FILENAME.log 2>&1
		(cat $INETD_CONF | grep -v '^#' | egrep 'tftp|talk|ntalk' || echo "[ tftp, talk, ntalk service : disable ]")																					>> ./$FILENAME.log 2>&1
	echo "+++++"											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	echo "[ Check Point 2 : Process ]" 								>> ./$FILENAME.log 2>&1
		(cat ./portlog.log | egrep 'tftp|talk|ntalk' || echo "[ tftp, talk, ntalk service : disable ]")						>> ./$FILENAME.log 2>&1
	echo "+++++"											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
else
	echo "[ Check point 1 : Case 1 : $INETD_CONF ]" 						>> ./$FILENAME.log 2>&1
		(cat $INETD_CONF | grep -v '^#' | egrep 'tftp|talk|ntalk' || echo "[ tftp, talk, ntalk service : disable ]")				>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	if [ $OS == "Linux" ]; then
		echo "[ Check point 1 : Case 2 : /etc/xinetd.d ]" 					>> ./$FILENAME.log 2>&1
			(ls -al /etc/xinetd.d | grep -v '^#' | egrep 'tftp|talk|ntalk' || echo "[ tftp, talk, ntalk service : disable ]")		>> ./$FILENAME.log 2>&1
		echo "+++++" 										>> ./$FILENAME.log 2>&1
		echo " " 										>> ./$FILENAME.log 2>&1
	fi
	echo "[ Check Point 2 : Process ]" 								>> ./$FILENAME.log 2>&1
		(ps -ef | egrep 'tftp|talk' | grep -v grep || echo "[ tftp, talk, ntalk service : disable ]")						>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
fi
echo "##### U-29 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-30 SMTP, Sendmail version"
echo "##### U-30 SMTP, Sendmail versiont"											>> ./$FILENAME.log 2>&1
echo "[ Check Point 1 : SMTP service ]"			 						>> ./$FILENAME.log 2>&1
	(ps -ef | grep sendmail | grep -v grep) 							>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ Check Point 2 : SMTP port ]"									>> ./$FILENAME.log 2>&1
	netstat -an | grep :25 | grep LISTEN 								>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ Check Point 3 : Sendmail Package Version ]"							>> ./$FILENAME.log 2>&1
	(rpm -q sendmail --queryformat '%{name} %{version}\n') 						>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ Check Point 4 : Sendmail Version ]"								>> ./$FILENAME.log 2>&1
	(grep DZ $SMTP_CONF) 										>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "##### U-30 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-31 Spam relay"
echo "##### U-31 Spam relay"											>> ./$FILENAME.log 2>&1
echo "[ Check Point 1 : SPAM relay ]"									>> ./$FILENAME.log 2>&1
	cat /etc/mail/access										>> ./$FILENAME.log 2>&1
	cat /etc/mail/access.db										>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ Check Point 2 : sendmail.cf ]"									>> ./$FILENAME.log 2>&1
	(cat $SMTP_CONF | grep "R$\*" | grep "Relaying denied")						>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "##### U-31 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-32 SMTP : PrivacyOptions"
echo "##### U-32 SMTP : PrivacyOptions"											>> ./$FILENAME.log 2>&1
	(cat $SMTP_CONF  | grep PrivacyOptions || echo "[ no config ]") 				>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "##### U-32 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-33 DNS version"
echo "##### U-33 DNS version"											>> ./$FILENAME.log 2>&1
if [ $OS == "SunOS" ]; then
	echo "[ Check Point 1 : DNS service ]"								>> ./$FILENAME.log 2>&1
		svcs -p "*named*"									>> ./$FILENAME.log 2>&1
	echo "+++++"											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
else
	echo "[ Check Point 1 : DNS service ]"								>> ./$FILENAME.log 2>&1
		(ps -ef | grep named | grep -v grep || echo "[ named daemon : disable ]")		>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
fi

echo "[ Check Point 2 : DNS port(53) ]"									>> ./$FILENAME.log 2>&1
	(netstat -an | grep :53 | grep LISTEN || echo "[ DNS port(53) : not opend ]") 			>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ Check Point 3 : DNS version ]"									>> ./$FILENAME.log 2>&1
    dig @localhost txt chaos version.bind. 								>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "##### U-33 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-34 DNS ZoneTransfer"
echo "##### U-34 DNS ZoneTransfer"											>> ./$FILENAME.log 2>&1
echo "[ Case 1 : DNS ZoneTransfer : allow-transfer in /etc/named.conf : BIND8]"				>> ./$FILENAME.log 2>&1
	(cat /etc/named.conf | grep allow-transfer || echo "[no configuration]")			>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ Case 2 : DNS ZoneTransfer : xfrnets in /etc/named.boot : BIND4.9]"				>> ./$FILENAME.log 2>&1
	(cat /etc/named.boot | grep xfrnets || echo "[no configuration]")				>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "##### U-34 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-35 Apache : directory listing"
echo "##### U-35 Apache : directory listing"												>> ./$FILENAME.log 2>&1
if [ $OS = "HP-UX" ]; then
	if [ $APACHE_CHECK = "OFF" ]; then
		echo "APACHE is disabled"									>> ./$FILENAME.log 2>&1
	else
		echo "Manual Check by Interview"									>> ./$FILENAME.log 2>&1
	fi
else
	if [ $APACHE_CHECK == "OFF" ]; then
		echo "APACHE is disabled"									>> ./$FILENAME.log 2>&1
	else
		echo "Manual Check by Interview"									>> ./$FILENAME.log 2>&1
	fi
fi
echo "+++++" 													>> ./$FILENAME.log 2>&1
echo " " 													>> ./$FILENAME.log 2>&1
echo "##### U-35 finish"											>> ./$FILENAME.log 2>&1
echo " " 													>> ./$FILENAME.log 2>&1

echo "U-36 Apache : Web process"
echo "##### U-36 Apache : Web process"												>> ./$FILENAME.log 2>&1
if [ $OS = "HP-UX" ]; then
	if [ $APACHE_CHECK = "OFF" ]; then
		echo "APACHE is disabled"									>> ./$FILENAME.log 2>&1
	else
		echo "Manual Check by Interview"									>> ./$FILENAME.log 2>&1
	fi
else
	if [ $APACHE_CHECK == "OFF" ]; then
		echo "APACHE is disabled"									>> ./$FILENAME.log 2>&1
	else
		echo "Manual Check by Interview"									>> ./$FILENAME.log 2>&1
	fi
fi
echo "+++++" 													>> ./$FILENAME.log 2>&1
echo " " 													>> ./$FILENAME.log 2>&1
echo "##### U-36 finish"											>> ./$FILENAME.log 2>&1
echo " " 													>> ./$FILENAME.log 2>&1

echo "U-37 Apache : Indexing"
echo "##### U-37 Apache : Indexing"												>> ./$FILENAME.log 2>&1
if [ $OS = "HP-UX" ]; then
	if [ $APACHE_CHECK = "OFF" ]; then
		echo "APACHE is disabled"									>> ./$FILENAME.log 2>&1
	else
		echo "Manual Check by Interview"									>> ./$FILENAME.log 2>&1
	fi
else
	if [ $APACHE_CHECK == "OFF" ]; then
		echo "APACHE is disabled"									>> ./$FILENAME.log 2>&1
	else
		echo "Manual Check by Interview"									>> ./$FILENAME.log 2>&1
	fi
fi
echo "+++++" 													>> ./$FILENAME.log 2>&1
echo " " 													>> ./$FILENAME.log 2>&1
echo "##### U-37 finish"											>> ./$FILENAME.log 2>&1
echo " " 													>> ./$FILENAME.log 2>&1

echo "U-38 Apache : Unnecessary file exists(sample, manual directory(file))"
echo "##### U-38 Apache : Unnecessary file exists(sample, manual directory(file))"		>> ./$FILENAME.log 2>&1
if [ $OS = "HP-UX" ]; then
	if [ $APACHE_CHECK = "OFF" ]; then
		echo "APACHE is disabled"									>> ./$FILENAME.log 2>&1
	else
		echo "Manual Check by Interview"									>> ./$FILENAME.log 2>&1
	fi
else
	if [ $APACHE_CHECK == "OFF" ]; then
		echo "APACHE is disabled"									>> ./$FILENAME.log 2>&1
	else
		echo "Manual Check by Interview"									>> ./$FILENAME.log 2>&1
	fi
fi
echo "+++++" 													>> ./$FILENAME.log 2>&1
echo " " 													>> ./$FILENAME.log 2>&1
echo "##### U-38 finish"											>> ./$FILENAME.log 2>&1
echo " " 													>> ./$FILENAME.log 2>&1

echo "U-39 Apache : limit Symbolic link"
echo "##### U-39 Apache : Restrict Symbolic link"												>> ./$FILENAME.log 2>&1
if [ $OS = "HP-UX" ]; then
	if [ $APACHE_CHECK = "OFF" ]; then
		echo "APACHE is disabled"									>> ./$FILENAME.log 2>&1
	else
		echo "Manual Check by Interview"									>> ./$FILENAME.log 2>&1
	fi
else
	if [ $APACHE_CHECK == "OFF" ]; then
		echo "APACHE is disabled"									>> ./$FILENAME.log 2>&1
	else
		echo "Manual Check by Interview"									>> ./$FILENAME.log 2>&1
	fi
fi
echo "+++++" 													>> ./$FILENAME.log 2>&1
echo " " 													>> ./$FILENAME.log 2>&1
echo "##### U-39 finish"											>> ./$FILENAME.log 2>&1
echo " " 													>> ./$FILENAME.log 2>&1

echo "U-40 Apache : file upload, download limit"
echo "##### U-40 Apache : file upload, download limit"							>> ./$FILENAME.log 2>&1
if [ $OS = "HP-UX" ]; then
	if [ $APACHE_CHECK = "OFF" ]; then
		echo "APACHE is disabled"									>> ./$FILENAME.log 2>&1
	else
		echo "Manual Check by Interview"									>> ./$FILENAME.log 2>&1
	fi
else
	if [ $APACHE_CHECK == "OFF" ]; then
		echo "APACHE is disabled"									>> ./$FILENAME.log 2>&1
	else
		echo "Manual Check by Interview"									>> ./$FILENAME.log 2>&1

	fi
fi
echo "+++++" 													>> ./$FILENAME.log 2>&1
echo " " 													>> ./$FILENAME.log 2>&1
echo "##### U-40 finish"											>> ./$FILENAME.log 2>&1
echo " " 													>> ./$FILENAME.log 2>&1

echo "U-41 Apache : seperate web service area"
echo "##### U-41 Apache : seperate web service area"												>> ./$FILENAME.log 2>&1
if [ $OS = "HP-UX" ]; then
	if [ $APACHE_CHECK = "OFF" ]; then
		echo "APACHE is disabled"									>> ./$FILENAME.log 2>&1
	else
		echo "Manual Check by Interview"									>> ./$FILENAME.log 2>&1
	fi
else
	if [ $APACHE_CHECK == "OFF" ]; then
		echo "APACHE is disabled"									>> ./$FILENAME.log 2>&1
	else
		echo "Manual Check by Interview"									>> ./$FILENAME.log 2>&1
	fi
fi
echo "+++++" 													>> ./$FILENAME.log 2>&1
echo " " 													>> ./$FILENAME.log 2>&1
echo "##### U-41 finish"											>> ./$FILENAME.log 2>&1
echo " " 													>> ./$FILENAME.log 2>&1

echo "U-60 Allowed ssh connection"
echo "##### U-60 Allowed ssh connection"											>> ./$FILENAME.log 2>&1
if [ $OS == "SunOS" ]; then
	echo "[ Check Point 1 : SSH service ]"								>> ./$FILENAME.log 2>&1
		svcs -p "*ssh*"										>> ./$FILENAME.log 2>&1
	echo "+++++"											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
else
	echo "[ Check Point 1 : SSH service ]"								>> ./$FILENAME.log 2>&1
		(ps -ef | grep ssh	| grep -v grep || echo "[ ssh service : disable ]")		>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
fi
echo "[ Check Point 2 : SSH port ]"				 					>> ./$FILENAME.log 2>&1
	netstat -an | grep :22 | grep LISTEN 								>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "##### U-60 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-61 ftp service"
echo "##### U-61 ftp service"											>> ./$FILENAME.log 2>&1
echo "[ Check Point 1 : Case 1 : FTP service in /etc/inetd.conf ]"			 		>> ./$FILENAME.log 2>&1
	(cat $INETD_CONF | grep -i ftp || echo "[ FTP service : disable ]")				>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
if [ $OS == "Linux" ]; then
	echo "[ Check Point 1 : Case 2 : FTP service in /etc/xinetd.conf ]"			 	>> ./$FILENAME.log 2>&1
		(cat $XINETD_CONF | grep -i ftp || echo "[ FTP service : disable ]")			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
fi
echo "[ Check Point 2 : FTP process ]"			 						>> ./$FILENAME.log 2>&1
	(ps -ef | grep ftp | grep -v grep || echo "[ FTP service : disable ]")				>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ Check Point 3 : FTP port ]"									>> ./$FILENAME.log 2>&1
	(netstat -an | grep *.21 | grep LISTEN || echo "[ FTP port : not opened ]")			>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "##### U-61 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-62 ftp account shell"
echo "##### U-62 ftp account shell"											>> ./$FILENAME.log 2>&1
	(cat $PASSWD | grep '^ftp' | grep -v grep || echo "[Do not exist!]")				>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "##### U-62 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-63 Ftpuser file owner and permission"
echo "##### U-63 Ftpuser file owner and permission"											>> ./$FILENAME.log 2>&1
echo "[ PROFTP ]"											>> ./$FILENAME.log 2>&1
echo "[ /etc/ftpusers ]"										>> ./$FILENAME.log 2>&1
	ls -al /etc/ftpusers										>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ NCFTP ]	"											>> ./$FILENAME.log 2>&1
echo "[ /etc/ftpd/ftpusers ]"										>> ./$FILENAME.log 2>&1
	ls -al /etc/ftpd/ftpusers									>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ VSFTP ]	"											>> ./$FILENAME.log 2>&1
echo "[ /etc/vsftpd.userlist]"										>> ./$FILENAME.log 2>&1
	ls -al /etc/vsftpd.userlist									>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ /etc/vsftpd/user_list ]"									>> ./$FILENAME.log 2>&1
	ls -al /etc/vsftpd/user_list									>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ /etc/vsftpd/vsftpd.userlist ]"									>> ./$FILENAME.log 2>&1
	ls -al /etc/vsftpd/vsftpd.userlist								>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ /etc/vsftpd/ftpusers ]"										>> ./$FILENAME.log 2>&1
	ls -al /etc/vsftpd/ftpusers 									>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ /etc/vsftpd/vsftpd.ftpusers ]"									>> ./$FILENAME.log 2>&1
	ls -al /etc/vsftpd/vsftpd.ftpusers 								>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "##### U-63 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-64 Ftpuser configuration"
echo "##### U-64 Ftpuser configuration"											>> ./$FILENAME.log 2>&1
echo "[ PROFTP ]	"										>> ./$FILENAME.log 2>&1
echo "[ content of /etc/ftpusers ]"									>> ./$FILENAME.log 2>&1
	(cat /etc/ftpusers)										>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ NCFTP ]	"											>> ./$FILENAME.log 2>&1
echo "[ content of /etc/ftpd/ftpusers ]"								>> ./$FILENAME.log 2>&1
	(cat /etc/ftpd/ftpusers)									>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ VSFTP ]	"											>> ./$FILENAME.log 2>&1
echo "[ content of /etc/vsftpd.conf ]"									>> ./$FILENAME.log 2>&1
	(cat /etc/vsftpd.conf | grep userlist_enable || echo "[ no config ]")				>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ content of /etc/vsftpd/vsftpd.conf ]"								>> ./$FILENAME.log 2>&1
	(cat /etc/vsftpd/vsftpd.conf | grep userlist_enable || echo "[ no config ]")			>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ content of /etc/vsftpd.userlist ]"								>> ./$FILENAME.log 2>&1
	(cat /etc/vsftpd.userlist)									>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ content of /etc/vsftpd/user_list ]"								>> ./$FILENAME.log 2>&1
	(cat /etc/vsftpd/user_list)									>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ content of /etc/vsftpd/vsftpd.userlist ]"							>> ./$FILENAME.log 2>&1
	(cat /etc/vsftpd/vsftpd.userlist)								>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ content of /etc/vsftpd/ftpusers ]"								>> ./$FILENAME.log 2>&1
	(cat /etc/vsftpd/ftpusers) 									>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ content of /etc/vsftpd/vsftpd.ftpusers ]"							>> ./$FILENAME.log 2>&1
	(cat /etc/vsftpd/vsftpd.ftpusers) 								>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " "												>> ./$FILENAME.log 2>&1
echo "##### U-64 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-65 at file owner and permission"
echo "##### U-65 at file owner and permission"											>> ./$FILENAME.log 2>&1
echo "[ Permission check : /etc/at.deny ]"								>> ./$FILENAME.log 2>&1
	ls -al $AT_DENY											>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ Permission check : /etc/at.allow ]"								>> ./$FILENAME.log 2>&1
	ls -al $AT_ALLOW										>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " "												>> ./$FILENAME.log 2>&1
echo "##### U-65 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-66 SNMP service"
echo "##### U-66 SNMP service"											>> ./$FILENAME.log 2>&1
if [ $OS == "SunOS" ]; then
	echo "[ Check Point 1 : SNMP service ]"			 					>> ./$FILENAME.log 2>&1
		svcs -p "*snmp*"									>> ./$FILENAME.log 2>&1
	echo "+++++"											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
else
	echo "[ Check Point 1 : SNMP service ]"			 					>> ./$FILENAME.log 2>&1
		(ps -ef | grep snmpd | grep -v grep || echo "[ SNMP service : disable ]") 		>> ./$FILENAME.log 2>&1
	echo "+++++"											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
fi
echo "[ Check Point 2 : SNMP port ]"									>> ./$FILENAME.log 2>&1
	(netstat -an | grep :161 || echo "[ SNMP port : not opened ]")					>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "##### U-66 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U	 SNMP commnunity string complexity"
echo "##### U-67 SNMP commnunity string complexity"							>> ./$FILENAME.log 2>&1
echo "[ Check Point 1 : $SNMP_CONF permission ]"							>> ./$FILENAME.log 2>&1
	ls -al $SNMP_CONF										>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " "												>> ./$FILENAME.log 2>&1
if [ $OS == "SunOS" ]; then
	echo "[ Check Point 2-1 : community string : $SNMP_CONF ]"						>> ./$FILENAME.log 2>&1
			(cat $SNMP_CONF  | grep community | grep -v '^#' || echo "[ no config ]") 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " "										>> ./$FILENAME.log 2>&1
	echo "[ Check Point 2-2 : community string : $SNMP_CONF2 ]"						>> ./$FILENAME.log 2>&1
			(cat $SNMP_CONF2  | grep community | grep -v '^#' || echo "[ no config ]") 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " "	
else
	echo "[ Check Point 2 : community string : $SNMP_CONF ]"						>> ./$FILENAME.log 2>&1
		(cat $SNMP_CONF  | grep community | grep -v '^#' || echo "[ no config ]") 			>> ./$FILENAME.log 2>&1
	echo "+++++" 												>> ./$FILENAME.log 2>&1
	echo " "												>> ./$FILENAME.log 2>&1
fi
if [ $OS == "AIX" ]; then
	echo "[ Check Point 3 : community string : snmpdv3 ]"						>> ./$FILENAME.log 2>&1
		(cat /etc/snmpdv3.conf  | grep -i community | grep -v '^#' || echo "[ no config ]")	>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " "											>> ./$FILENAME.log 2>&1
fi
echo "##### U-67 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-68 Banner"
echo "##### U-68 Banner"											>> ./$FILENAME.log 2>&1
echo "[ Case 1 : Common ssh & telnet banner : motd ]"							>> ./$FILENAME.log 2>&1
	(cat /etc/motd)											>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ Case 3 : telnet banner : &TELNET_BANNER ]"							>> ./$FILENAME.log 2>&1
	(cat $TELNET_BANNER)										>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ Case 4 : FTP banner : $FTP_BANNER ]"								>> ./$FILENAME.log 2>&1
	(cat $FTP_BANNER | grep -i BANNER) 								>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ Case 4 : FTP banner : /etc/ftpd/ftpaccess(banner) ]"						>> ./$FILENAME.log 2>&1
	(`cat /etc/ftpd/ftpaccess | grep banner | awk '{print $2}'`)					>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ Case 4 : FTP banner : /etc/ftpd/ftpaccess(message) ]"						>> ./$FILENAME.log 2>&1
	(`cat /etc/ftpd/ftpaccess | grep message | awk '{print $2}'`)					>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ Case 4 : FTP banner : /etc/ftpd/ftpaccess(version) ]"						>> ./$FILENAME.log 2>&1
	(cat /etc/ftpd/ftpaccess | grep greeting)							>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ Case 5 : SMTP banner : /etc/mail/sendmail.cf ]"						>> ./$FILENAME.log 2>&1
	(cat $SMTP_BANNER | grep message | grep banner)							>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 	
echo "[ Case 6 : DNS banner : /etc/named.conf ]"						>> ./$FILENAME.log 2>&1
	(cat $DNS_BANNER | grep message | grep banner)							>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 	
echo "##### U-68 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-69 NFS file owner and permission"
echo "##### U-69 NFS file owner and permission"							>> ./$FILENAME.log 2>&1
	ls -al $NFS_CONF										>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " "												>> ./$FILENAME.log 2>&1
echo "##### U-69 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "U-70 SMTP : expn, vrfy"
echo "##### U-70 SMTP : expn, vrfy"											>> ./$FILENAME.log 2>&1
echo "[ Check Point 1 : Sendmail start script ]"							>> ./$FILENAME.log 2>&1
if [ $OS = "HP-UX" ]; then
	(ls -al /sbin/rc*.d/* | grep -i sendmail | grep "/S")						>> ./$FILENAME.log 2>&1
else
	(ls -al /etc/rc*.d/* | grep -i sendmail | grep "/S")						>> ./$FILENAME.log 2>&1
fi
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "[ Check Point 2 : /etc/mail/sendmail.cf ]"							>> ./$FILENAME.log 2>&1
if [ -f /etc/mail/sendmail.cf ]
  then
    grep -v '^ *#' /etc/mail/sendmail.cf | grep PrivacyOptions						>> ./$FILENAME.log 2>&1
  else
    echo "[ no file(/etc/mail/sendmail.cf) ]"								>> ./$FILENAME.log 2>&1
fi
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo "##### U-70 finish"										>> ./$FILENAME.log 2>&1
echo " "												>> ./$FILENAME.log 2>&1

echo "U-71 Apache : hiding error page"
echo "##### U-71 Apache : hiding error page"											>> ./$FILENAME.log 2>&1
if [ $OS = "HP-UX" ]; then
	if [ $APACHE_CHECK = "OFF" ]; then
		echo "APACHE is disabled"									>> ./$FILENAME.log 2>&1
	else
		echo "Manual Check by Interview"									>> ./$FILENAME.log 2>&1
	fi
else
	if [ $APACHE_CHECK == "OFF" ]; then
		echo "APACHE is disabled"									>> ./$FILENAME.log 2>&1
	else
		echo "Manual Check by Interview"									>> ./$FILENAME.log 2>&1
	fi
fi
echo "+++++" 													>> ./$FILENAME.log 2>&1
echo " " 													>> ./$FILENAME.log 2>&1
echo "##### U-71 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1


echo "U-42 Patch"
echo "##### U-42 Patch"											>> ./$FILENAME.log 2>&1
echo "Manual Check by Interview"									>> ./$FILENAME.log 2>&1
echo "##### U-42 finish"										>> ./$FILENAME.log 2>&1
echo " "												>> ./$FILENAME.log 2>&1

echo "U-43 Log management"
echo "##### U-43 Log management"											>> ./$FILENAME.log 2>&1
echo "Manual Check by Interview"									>> ./$FILENAME.log 2>&1
echo "##### U-43 finish"										>> ./$FILENAME.log 2>&1
echo " "												>> ./$FILENAME.log 2>&1

echo "U-72 Log entity"
echo "##### U-72 Log entity"											>> ./$FILENAME.log 2>&1
echo "[ Check Point 1 : $SYSLOG_CONF ]"									>> ./$FILENAME.log 2>&1
	(cat $SYSLOG_CONF | grep -v "#"	)								>> ./$FILENAME.log 2>&1
echo "+++++" 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
if [ $OS = "HP-UX" ]; then
	echo "[ Check Point 2 : /var/adm/sulog  ]"							>> ./$FILENAME.log 2>&1
		tail -5 /var/adm/sulog									>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
elif [ $OS == "Linux" ]; then
	echo "[ Check Point 2 : /etc/rsyslog.conf  ]"							>> ./$FILENAME.log 2>&1
		(cat /etc/rsyslog.conf | grep -v "#"	)						>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " "											>> ./$FILENAME.log 2>&1
fi
echo "##### U-72 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "=============================Apache conf============================"	 >> ./$FILENAME.log 2>&1

echo $TEST2                                                                                             >> ./$FILENAME.log 2>&1
$TEST2/httpd -V | grep "HTTPD_ROOT" | sed 's/^.*=\(\)/\1/' | tr -d [\"][\]				>> ./applebananamelon 2>&1	
TEST5=`cat ./applebananamelon`
find $TEST5 -name httpd.conf -exec cat {} \;								>> ./$FILENAME.log 2>&1
rm -rf ./applebananamelon


echo "=============================Apache conf============================"	 >> ./$FILENAME.log 2>&1

echo " " 		>> ./$FILENAME.log 2>&1
echo " " 		>> ./$FILENAME.log 2>&1
echo " " 		>> ./$FILENAME.log 2>&1
echo " " 		>> ./$FILENAME.log 2>&1

echo "Optional Check"
echo "============================ ETC ============================"					>> ./$FILENAME.log 2>&1
echo "========== Process "										>> ./$FILENAME.log 2>&1
if [ $OS == "SunOS" ]; then
	(svcs -pa | sort | uniq) 									>> ./$FILENAME.log 2>&1
else
	(ps -ef | grep -v grep | grep -v ps | sort | uniq)						>> ./$FILENAME.log 2>&1
fi
echo " " 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "========== Listen Port "										>> ./$FILENAME.log 2>&1
	netstat -an											>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

if [ $OS == "AIX" ]; then
	echo "========== $PASSWD_CONF "										>> ./$FILENAME.log 2>&1
		(cat $PASSWD_CONF)										>> ./$FILENAME.log 2>&1
	echo " "												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
	
	echo "========== $GROUP "										>> ./$FILENAME.log 2>&1
		(cat $GROUP)											>> ./$FILENAME.log 2>&1
	echo " "												>> ./$FILENAME.log 2>&1
	echo " "												>> ./$FILENAME.log 2>&1

	echo "========== $LOGIN_CONF "										>> ./$FILENAME.log 2>&1
		(cat $LOGIN_CONF)										>> ./$FILENAME.log 2>&1
	echo " "												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1

	echo "========== $INETD_CONF "										>> ./$FILENAME.log 2>&1
		(cat $INETD_CONF)										>> ./$FILENAME.log 2>&1
	echo " "												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1

	echo " "												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1

	echo "========== $PROFILE "										>> ./$FILENAME.log 2>&1
		(cat $PROFILE)											>> ./$FILENAME.log 2>&1
	echo " "												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1

	echo "========== $SYSLOG_CONF "										>> ./$FILENAME.log 2>&1
		(cat $SYSLOG_CONF)										>> ./$FILENAME.log 2>&1
	echo " "												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1

	echo "========== $SMTP_CONF "										>> ./$FILENAME.log 2>&1
		(cat $SMTP_CONF)										>> ./$FILENAME.log 2>&1
	echo " "												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1

	echo "========== lsuser "									>> ./$FILENAME.log 2>&1
		lsuser -a account_locked time_last_login ALL | grep -v account_locked=true		>> ./$FILENAME.log 2>&1
	echo " "											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1

	echo "========== LastCmd "									>> ./$FILENAME.log 2>&1
		last											>> ./$FILENAME.log 2>&1
	echo ""												>> ./$FILENAME.log 2>&1
	echo "========== lsuser -f ALL "								>> ./$FILENAME.log 2>&1
		lsuser -f ALL
	echo " "											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
elif [ $OS = "HP-UX" ]; then
	echo "========== $PASSWD_CONF "										>> ./$FILENAME.log 2>&1
		(cat $PASSWD_CONF)										>> ./$FILENAME.log 2>&1
	echo " "												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1

	echo "========== $GROUP "										>> ./$FILENAME.log 2>&1
		(cat $GROUP)											>> ./$FILENAME.log 2>&1
	echo " "												>> ./$FILENAME.log 2>&1
	echo " "												>> ./$FILENAME.log 2>&1

	echo "========== $LOGIN_CONF "										>> ./$FILENAME.log 2>&1
		(cat $LOGIN_CONF)										>> ./$FILENAME.log 2>&1
	echo " "												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1

	echo "========== $INETD_CONF "										>> ./$FILENAME.log 2>&1
		(cat $INETD_CONF)										>> ./$FILENAME.log 2>&1
	echo " "												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1


	echo "========== $PROFILE "										>> ./$FILENAME.log 2>&1
		(cat $PROFILE)											>> ./$FILENAME.log 2>&1
	echo " "												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1

	echo "========== $SYSLOG_CONF "										>> ./$FILENAME.log 2>&1
		(cat $SYSLOG_CONF)										>> ./$FILENAME.log 2>&1
	echo " "												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1

	echo "========== $SMTP_CONF "										>> ./$FILENAME.log 2>&1
		(cat $SMTP_CONF)										>> ./$FILENAME.log 2>&1
	echo " "												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1
elif [ $OS == "Linux" ]; then
	echo "========== $PASSWD_CONF "										>> ./$FILENAME.log 2>&1
		(cat $PASSWD_CONF)										>> ./$FILENAME.log 2>&1
	echo " "												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1

	echo "========== $GROUP "										>> ./$FILENAME.log 2>&1
		(cat $GROUP)											>> ./$FILENAME.log 2>&1
	echo " "												>> ./$FILENAME.log 2>&1
	echo " "												>> ./$FILENAME.log 2>&1

	echo "========== $LOGIN_CONF "										>> ./$FILENAME.log 2>&1
		(cat $LOGIN_CONF)										>> ./$FILENAME.log 2>&1
	echo " "												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1

	echo "========== $INETD_CONF "										>> ./$FILENAME.log 2>&1
		(cat $INETD_CONF)										>> ./$FILENAME.log 2>&1
	echo " "												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1

	echo "========== $XINETD_CONF "										>> ./$FILENAME.log 2>&1
		(cat $XINETD_CONF)										>> ./$FILENAME.log 2>&1
	echo " "												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1

	echo "========== $PROFILE "										>> ./$FILENAME.log 2>&1
		(cat $PROFILE)											>> ./$FILENAME.log 2>&1
	echo " "												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1

	echo "========== $SYSLOG_CONF "										>> ./$FILENAME.log 2>&1
		(cat $SYSLOG_CONF)										>> ./$FILENAME.log 2>&1
	echo " "												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1

	echo "========== $SMTP_CONF "										>> ./$FILENAME.log 2>&1
		(cat $SMTP_CONF)										>> ./$FILENAME.log 2>&1
	echo " "												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1

	echo "========== /etc/rsyslog.conf "									>> ./$FILENAME.log 2>&1
		cat /etc/rsyslog.conf										>> ./$FILENAME.log 2>&1
	echo " "												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1

	echo "========== chkconfig "									>> ./$FILENAME.log 2>&1
		chkconfig										>> ./$FILENAME.log 2>&1
elif [ $OS == "SunOS" ]; then
	echo "========== $PASSWD_CONF "										>> ./$FILENAME.log 2>&1
		(cat $PASSWD_CONF)										>> ./$FILENAME.log 2>&1
	echo " "												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1

	echo "========== $GROUP "										>> ./$FILENAME.log 2>&1
		(cat $GROUP)											>> ./$FILENAME.log 2>&1
	echo " "												>> ./$FILENAME.log 2>&1
	echo " "												>> ./$FILENAME.log 2>&1

	echo "========== $LOGIN_CONF "										>> ./$FILENAME.log 2>&1
		(cat $LOGIN_CONF)										>> ./$FILENAME.log 2>&1
	echo " "												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1

	echo "========== $INETD_CONF "										>> ./$FILENAME.log 2>&1
		(cat $INETD_CONF)										>> ./$FILENAME.log 2>&1
	echo " "												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1

	echo "========== $PROFILE "										>> ./$FILENAME.log 2>&1
		(cat $PROFILE)											>> ./$FILENAME.log 2>&1
	echo " "												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1

	echo "========== $SYSLOG_CONF "										>> ./$FILENAME.log 2>&1
		(cat $SYSLOG_CONF)										>> ./$FILENAME.log 2>&1
	echo " "												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1

	echo "========== $SMTP_CONF "										>> ./$FILENAME.log 2>&1
		(cat $SMTP_CONF)										>> ./$FILENAME.log 2>&1
	echo " "												>> ./$FILENAME.log 2>&1
	echo " " 												>> ./$FILENAME.log 2>&1

													>> ./$FILENAME.log 2>&1	
fi
echo "AC02 Password policy : recently password remember"
echo "##### AC02 Password policy : recently password remember"						>> ./$FILENAME.log 2>&1
if [ $OS == "AIX" ]; then
	egrep -i ":$|histsize" $PASSWD_CONF								>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " "											>> ./$FILENAME.log 2>&1
#elif [ $OS = "HP-UX" ]; then
#	echo "[Standard Mode & Trusted Mode] " 								>> ./$FILENAME.log 2>&1
#	egrep -i ":$|PASSWORD_HISTORY_DEPTH" $PASSWD_CONF							>> ./$FILENAME.log 2>&1
#	echo "+++++" 											>> ./$FILENAME.log 2>&1
#	echo " " 											>> ./$FILENAME.log 2>&1
#	(cat $PASSWD_CONF | grep -i MIN_PASSWORD_LENGTH || echo "[no config]")				>> ./$FILENAME.log 2>&1
#	echo "+++++" 											>> ./$FILENAME.log 2>&1
#	echo " " 											>> ./$FILENAME.log 2>&1
elif [ $OS == "Linux" ]; then
	(cat $PASSWD_CONF | grep -i remember)								>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
elif [ $OS == "SunOS" ]; then
	(cat $PASSWD_CONF | grep -i HISTORY=	|| echo "[no config]")					>> ./$FILENAME.log 2>&1
echo "+++++"												>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1
fi
echo "##### AC02 finish"											>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "AC04 E /usr/bin/last OR /usr/sbin/ifconfig owner and permission check"
echo "##### AC04 E /usr/bin/last OR /usr/sbin/ifconfig owner and permission check"			>> ./$FILENAME.log 2>&1
if [ $OS == "SunOS" ]; then
	ls -al /usr/bin/last 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	ls -al /usr/sbin/ifconfig										>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
else
	ls -al /usr/bin/last 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	ls -al /usr/sbin/ifconfig 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
fi
echo "##### AC04 E finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1


echo "AC04 H /etc/vsftpd.ftpusers OR /etc/vsftpd.user_list owner and permission check"
echo "##### AC04 H /etc/vsftpd.ftpusers OR /etc/vsftpd.user_list owner and permission check"			>> ./$FILENAME.log 2>&1
if [ $OS == "SunOS" ]; then
	ls -al /etc/ftpusers 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
else
	ls -al /etc/vsftpd.ftpusers 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	ls -al /etc/vsftpd.user_list 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
fi
echo "##### AC04 H finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "AC04 J /etc/pam.d/system-auth owner and permission check"
echo "##### AC04 J /etc/vsftpd.ftpusers OR /etc/vsftpd.user_list owner and permission check"			>> ./$FILENAME.log 2>&1
if [ $OS == "SunOS" ]; then
	ls -al /etc/default/passwd 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
else
	ls -la /etc/pam.d/system-auth | awk -F'-> ' '{print $2}' | xargs ls -la							 			>> ./$FILENAME.log 2>&1
	ls -al /etc/pam.d/system-auth* 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
fi
echo "##### AC04 J finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "AC04 L Backup Files owner and permission check"
echo "##### AC04 L Backup Files owner and permission check"			>> ./$FILENAME.log 2>&1
if [ $OS == "SunOS" ]; then
	ls -al /etc/passwd* 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	ls -al /etc/inetd.conf* 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	ls -al /etc/services* 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	ls -al /etc/hosts* 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	ls -al /var/adm/wtmp* 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	ls -al /var/adm/sulog* 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	ls -al /var/adm/btmp* 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
elif [ $OS == "AIX" ]; then
	ls -al /etc/passwd* 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	ls -al /etc/inetd.conf* 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	ls -al /etc/services* 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	ls -al /etc/hosts* 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	ls -al /var/adm/wtmp* 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	ls -al /var/adm/sulog* 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	ls -al /var/adm/utmp* 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
elif [ $OS == "Linux" ]; then
	ls -al /etc/passwd* 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	ls -al /etc/xinetd.conf* 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	ls -al /etc/services* 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	ls -al /etc/hosts* 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	ls -al /var/adm/wtmp* 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	ls -al /var/adm/sulog* 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	ls -al /var/adm/btmp* 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
fi
echo "##### AC04 L finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "SS01 NFS check"
echo "##### SS01 NFS check"			>> ./$FILENAME.log 2>&1
if [ $OS == "SunOS" ]; then
	showmount -e hostname 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	cat /etc/exports							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	cat /etc/dfs/dfstab							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
elif [ $OS == "AIX" ]; then
	showmount -e hostname 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	cat /etc/exports							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	cat /etc/dfs/dfstab							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
elif [ $OS == "Linux" ]; then
	showmount -e hostname 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	cat /etc/exports							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	cat /etc/dfs/dfstab							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
fi
echo "##### SS01 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "SS02 Service check"
echo "##### SS02 Service check"			>> ./$FILENAME.log 2>&1
if [ $OS == "SunOS" ]; then
	inetadm -l egrep -i 'rlogin|rsh|rexec' 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	ls -al /etc/hosts.equiv							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	awk -F: '{print $6 "/.rhosts"}' /etc/passwd | xargs ls -al 2>/dev/null 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1		
	inetadm -l | grep "bootp\|chargen\|cmsd\|daytime\|discard\|echo\|finger\|netstat\|rusersd\|sprayed\|systat\|tftp\|time\|ttdbserverd\|uucp" 						 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	svcs -l | grep "bootp\|chargen\|cmsd\|daytime\|discard\|echo\|finger\|netstat\|rusersd\|sprayed\|systat\|tftp\|time\|ttdbserverd\|uucp"							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1	
	netstat -an 						 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
elif [ $OS == "AIX" ]; then
	cat /etc/inetd.conf 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	lssrc -a							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	ls -al /etc/hosts.equiv							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1		
	awk -F: '{print $6 "/.rhosts"}' /etc/passwd | xargs ls -al 2>/dev/null							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1		
	netstat -an | grep "bootp\|chargen\|cmsd\|daytime\|discard\|echo\|finger\|netstat\|rusersd\|sprayed\|systat\|tftp\|time\|ttdbserverd\|uucp" 											>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1		
elif [ $OS == "Linux" ]; then
	cat /etc/xinetd.conf 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	service --status-all							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	ls -al /etc/hosts.equiv 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1		
	awk -F: '{print $6 "/.rhosts"}' /etc/passwd | xargs ls -al 2>/dev/null							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1		
	netstat -an | grep "bootp\|chargen\|cmsd\|daytime\|discard\|echo\|finger\|netstat\|rusersd\|sprayed\|systat\|tftp\|time\|ttdbserverd\|uucp"  						 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 										>> ./$FILENAME.log 2>&1	
fi
echo "##### SS02 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "SS03 SNMP and FTP check"
echo "##### SS03 SNMP and FTP check"			>> ./$FILENAME.log 2>&1
if [ $OS == "AIX" ]; then
	cat /etc/snmpd.conf 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	egrep -i ":$|anonymous_enable" /etc/vsftpd.conf 				 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
else
	cat /etc/snmpd.conf 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	(cat /etc/vsftpd.conf | grep -i anonymous_enable)  				 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
fi
echo "##### SS03 finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1

echo "LP01 A LOG check"
echo "##### LP01 A LOG check"			>> ./$FILENAME.log 2>&1
if [ $OS == "SunOS" ]; then
	ls -al /var/adm/wtmp* 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	ls -al /var/adm/btmp*							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	ls -al /var/adm/sulog 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1		
	
	ls -al /var/adm/messages 						 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
elif [ $OS == "AIX" ]; then
	ls -al /var/adm/wtmp* 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	ls -al /etc/security/failedlogin							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	ls -al /var/adm/sulog 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1		
	ls -al /var/adm/syslog.log							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1		
	ls -al /var/log/messages 						 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 	
elif [ $OS == "Linux" ]; then
	ls -al /var/log/wtmp* 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	ls -al /var/log/btmp*							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1
	ls -al /var/log/sulog 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1		
	ls -al /var/log/secure 							 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 											>> ./$FILENAME.log 2>&1		
	ls -al /var/log/messages 						 			>> ./$FILENAME.log 2>&1
	echo "+++++" 											>> ./$FILENAME.log 2>&1
	echo " " 
fi
echo "##### LP01 A finish"										>> ./$FILENAME.log 2>&1
echo " " 												>> ./$FILENAME.log 2>&1


echo "================== finish of Script ========================"					>> ./$FILENAME.log 2>&1
echo " "
echo "================== finish of Script ========================"
date
date													>> ./$FILENAME.log 2>&1

exit 0
